
/*
 * GET home page.
 */

var aTableAlpha = "A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y";

aTableAlpha = aTableAlpha.split(",");

var aTableBin = "0000,0001,0010,0011,0100,0101,0110,0111,1000,1001,1010,1011,1100,1101,1110,1111"; 
aTableBin = aTableBin .split(",")

var aTableDeckA = "720," +
"ABCDEF,ABCDFE,ABCEDF,ABCEFD,ABCFDE,ABCFED,ABDCEF,ABDCFE,ABDECF,ABDEFC,ABDFCE,ABDFEC,ABECDF,ABECFD,ABEDCF,ABEDFC,ABEFCD," +
"ABEFDC,ABFCDE,ABFCED,ABFDCE,ABFDEC,ABFECD,ABFEDC,ACBDEF,ACBDFE,ACBEDF,ACBEFD,ACBFDE,ACBFED,ACDBEF,ACDBFE,ACDEBF,ACDEFB," +
"ACDFBE,ACDFEB,ACEBDF,ACEBFD,ACEDBF,ACEDFB,ACEFBD,ACEFDB,ACFBDE,ACFBED,ACFDBE,ACFDEB,ACFEBD,ACFEDB,ADBCEF,ADBCFE,ADBECF," +
"ADBEFC,ADBFCE,ADBFEC,ADCBEF,ADCBFE,ADCEBF,ADCEFB,ADCFBE,ADCFEB,ADEBCF,ADEBFC,ADECBF,ADECFB,ADEFBC,ADEFCB,ADFBCE,ADFBEC," +
"ADFCBE,ADFCEB,ADFEBC,ADFECB,AEBCDF,AEBCFD,AEBDCF,AEBDFC,AEBFCD,AEBFDC,AECBDF,AECBFD,AECDBF,AECDFB,AECFBD,AECFDB,AEDBCF," +
"AEDBFC,AEDCBF,AEDCFB,AEDFBC,AEDFCB,AEFBCD,AEFBDC,AEFCBD,AEFCDB,AEFDBC,AEFDCB,AFBCDE,AFBCED,AFBDCE,AFBDEC,AFBECD,AFBEDC," +
"AFCBDE,AFCBED,AFCDBE,AFCDEB,AFCEBD,AFCEDB,AFDBCE,AFDBEC,AFDCBE,AFDCEB,AFDEBC,AFDECB,AFEBCD,AFEBDC,AFECBD,AFECDB,AFEDBC," +
"AFEDCB,BACDEF,BACDFE,BACEDF,BACEFD,BACFDE,BACFED,BADCEF,BADCFE,BADECF,BADEFC,BADFCE,BADFEC,BAECDF,BAECFD,BAEDCF,BAEDFC," +
"BAEFCD,BAEFDC,BAFCDE,BAFCED,BAFDCE,BAFDEC,BAFECD,BAFEDC,BCADEF,BCADFE,BCAEDF,BCAEFD,BCAFDE,BCAFED,BCDAEF,BCDAFE,BCDEAF," +
"BCDEFA,BCDFAE,BCDFEA,BCEADF,BCEAFD,BCEDAF,BCEDFA,BCEFAD,BCEFDA,BCFADE,BCFAED,BCFDAE,BCFDEA,BCFEAD,BCFEDA,BDACEF,BDACFE," +
"BDAECF,BDAEFC,BDAFCE,BDAFEC,BDCAEF,BDCAFE,BDCEAF,BDCEFA,BDCFAE,BDCFEA,BDEACF,BDEAFC,BDECAF,BDECFA,BDEFAC,BDEFCA,BDFACE," +
"BDFAEC,BDFCAE,BDFCEA,BDFEAC,BDFECA,BEACDF,BEACFD,BEADCF,BEADFC,BEAFCD,BEAFDC,BECADF,BECAFD,BECDAF,BECDFA,BECFAD,BECFDA," +
"BEDACF,BEDAFC,BEDCAF,BEDCFA,BEDFAC,BEDFCA,BEFACD,BEFADC,BEFCAD,BEFCDA,BEFDAC,BEFDCA,BFACDE,BFACED,BFADCE,BFADEC,BFAECD," +
"BFAEDC,BFCADE,BFCAED,BFCDAE,BFCDEA,BFCEAD,BFCEDA,BFDACE,BFDAEC,BFDCAE,BFDCEA,BFDEAC,BFDECA,BFEACD,BFEADC,BFECAD,BFECDA," +
"BFEDAC,BFEDCA,CABDEF,CABDFE,CABEDF,CABEFD,CABFDE,CABFED,CADBEF,CADBFE,CADEBF,CADEFB,CADFBE,CADFEB,CAEBDF,CAEBFD,CAEDBF," +
"CAEDFB,CAEFBD,CAEFDB,CAFBDE,CAFBED,CAFDBE,CAFDEB,CAFEBD,CAFEDB,CBADEF,CBADFE,CBAEDF,CBAEFD,CBAFDE,CBAFED,CBDAEF,CBDAFE," +
"CBDEAF,CBDEFA,CBDFAE,CBDFEA,CBEADF,CBEAFD,CBEDAF,CBEDFA,CBEFAD,CBEFDA,CBFADE,CBFAED,CBFDAE,CBFDEA,CBFEAD,CBFEDA,CDABEF," +
"CDABFE,CDAEBF,CDAEFB,CDAFBE,CDAFEB,CDBAEF,CDBAFE,CDBEAF,CDBEFA,CDBFAE,CDBFEA,CDEABF,CDEAFB,CDEBAF,CDEBFA,CDEFAB,CDEFBA," +
"CDFABE,CDFAEB,CDFBAE,CDFBEA,CDFEAB,CDFEBA,CEABDF,CEABFD,CEADBF,CEADFB,CEAFBD,CEAFDB,CEBADF,CEBAFD,CEBDAF,CEBDFA,CEBFAD," +
"CEBFDA,CEDABF,CEDAFB,CEDBAF,CEDBFA,CEDFAB,CEDFBA,CEFABD,CEFADB,CEFBAD,CEFBDA,CEFDAB,CEFDBA,CFABDE,CFABED,CFADBE,CFADEB," +
"CFAEBD,CFAEDB,CFBADE,CFBAED,CFBDAE,CFBDEA,CFBEAD,CFBEDA,CFDABE,CFDAEB,CFDBAE,CFDBEA,CFDEAB,CFDEBA,CFEABD,CFEADB,CFEBAD," +
"CFEBDA,CFEDAB,CFEDBA,DABCEF,DABCFE,DABECF,DABEFC,DABFCE,DABFEC,DACBEF,DACBFE,DACEBF,DACEFB,DACFBE,DACFEB,DAEBCF,DAEBFC," +
"DAECBF,DAECFB,DAEFBC,DAEFCB,DAFBCE,DAFBEC,DAFCBE,DAFCEB,DAFEBC,DAFECB,DBACEF,DBACFE,DBAECF,DBAEFC,DBAFCE,DBAFEC,DBCAEF," +
"DBCAFE,DBCEAF,DBCEFA,DBCFAE,DBCFEA,DBEACF,DBEAFC,DBECAF,DBECFA,DBEFAC,DBEFCA,DBFACE,DBFAEC,DBFCAE,DBFCEA,DBFEAC,DBFECA," +
"DCABEF,DCABFE,DCAEBF,DCAEFB,DCAFBE,DCAFEB,DCBAEF,DCBAFE,DCBEAF,DCBEFA,DCBFAE,DCBFEA,DCEABF,DCEAFB,DCEBAF,DCEBFA,DCEFAB," +
"DCEFBA,DCFABE,DCFAEB,DCFBAE,DCFBEA,DCFEAB,DCFEBA,DEABCF,DEABFC,DEACBF,DEACFB,DEAFBC,DEAFCB,DEBACF,DEBAFC,DEBCAF,DEBCFA," +
"DEBFAC,DEBFCA,DECABF,DECAFB,DECBAF,DECBFA,DECFAB,DECFBA,DEFABC,DEFACB,DEFBAC,DEFBCA,DEFCAB,DEFCBA,DFABCE,DFABEC,DFACBE," +
"DFACEB,DFAEBC,DFAECB,DFBACE,DFBAEC,DFBCAE,DFBCEA,DFBEAC,DFBECA,DFCABE,DFCAEB,DFCBAE,DFCBEA,DFCEAB,DFCEBA,DFEABC,DFEACB," +
"DFEBAC,DFEBCA,DFECAB,DFECBA,EABCDF,EABCFD,EABDCF,EABDFC,EABFCD,EABFDC,EACBDF,EACBFD,EACDBF,EACDFB,EACFBD,EACFDB,EADBCF," +
"EADBFC,EADCBF,EADCFB,EADFBC,EADFCB,EAFBCD,EAFBDC,EAFCBD,EAFCDB,EAFDBC,EAFDCB,EBACDF,EBACFD,EBADCF,EBADFC,EBAFCD,EBAFDC," +
"EBCADF,EBCAFD,EBCDAF,EBCDFA,EBCFAD,EBCFDA,EBDACF,EBDAFC,EBDCAF,EBDCFA,EBDFAC,EBDFCA,EBFACD,EBFADC,EBFCAD,EBFCDA,EBFDAC," +
"EBFDCA,ECABDF,ECABFD,ECADBF,ECADFB,ECAFBD,ECAFDB,ECBADF,ECBAFD,ECBDAF,ECBDFA,ECBFAD,ECBFDA,ECDABF,ECDAFB,ECDBAF,ECDBFA," +
"ECDFAB,ECDFBA,ECFABD,ECFADB,ECFBAD,ECFBDA,ECFDAB,ECFDBA,EDABCF,EDABFC,EDACBF,EDACFB,EDAFBC,EDAFCB,EDBACF,EDBAFC,EDBCAF," +
"EDBCFA,EDBFAC,EDBFCA,EDCABF,EDCAFB,EDCBAF,EDCBFA,EDCFAB,EDCFBA,EDFABC,EDFACB,EDFBAC,EDFBCA,EDFCAB,EDFCBA,EFABCD,EFABDC," +
"EFACBD,EFACDB,EFADBC,EFADCB,EFBACD,EFBADC,EFBCAD,EFBCDA,EFBDAC,EFBDCA,EFCABD,EFCADB,EFCBAD,EFCBDA,EFCDAB,EFCDBA,EFDABC," +
"EFDACB,EFDBAC,EFDBCA,EFDCAB,EFDCBA,FABCDE,FABCED,FABDCE,FABDEC,FABECD,FABEDC,FACBDE,FACBED,FACDBE,FACDEB,FACEBD,FACEDB," +
"FADBCE,FADBEC,FADCBE,FADCEB,FADEBC,FADECB,FAEBCD,FAEBDC,FAECBD,FAECDB,FAEDBC,FAEDCB,FBACDE,FBACED,FBADCE,FBADEC,FBAECD," +
"FBAEDC,FBCADE,FBCAED,FBCDAE,FBCDEA,FBCEAD,FBCEDA,FBDACE,FBDAEC,FBDCAE,FBDCEA,FBDEAC,FBDECA,FBEACD,FBEADC,FBECAD,FBECDA," +
"FBEDAC,FBEDCA,FCABDE,FCABED,FCADBE,FCADEB,FCAEBD,FCAEDB,FCBADE,FCBAED,FCBDAE,FCBDEA,FCBEAD,FCBEDA,FCDABE,FCDAEB,FCDBAE," +
"FCDBEA,FCDEAB,FCDEBA,FCEABD,FCEADB,FCEBAD,FCEBDA,FCEDAB,FCEDBA,FDABCE,FDABEC,FDACBE,FDACEB,FDAEBC,FDAECB,FDBACE,FDBAEC," +
"FDBCAE,FDBCEA,FDBEAC,FDBECA,FDCABE,FDCAEB,FDCBAE,FDCBEA,FDCEAB,FDCEBA,FDEABC,FDEACB,FDEBAC,FDEBCA,FDECAB,FDECBA,FEABCD," +
"FEABDC,FEACBD,FEACDB,FEADBC,FEADCB,FEBACD,FEBADC,FEBCAD,FEBCDA,FEBDAC,FEBDCA,FECABD,FECADB,FECBAD,FECBDA,FECDAB,FECDBA," +
"FEDABC,FEDACB,FEDBAC,FEDBCA,FEDCAB,FEDCBA";

aTableDeckA=aTableDeckA.split(",");

var aTableDeckB = "5040," +
"GHIJKLM,GHIJKML,GHIJLKM,GHIJLMK,GHIJMKL,GHIJMLK,GHIKJLM,GHIKJML,GHIKLJM,GHIKLMJ,GHIKMJL,GHIKMLJ,GHILJKM,GHILJMK,GHILKJM," +
"GHILKMJ,GHILMJK,GHILMKJ,GHIMJKL,GHIMJLK,GHIMKJL,GHIMKLJ,GHIMLJK,GHIMLKJ,GHJIKLM,GHJIKML,GHJILKM,GHJILMK,GHJIMKL,GHJIMLK," +
"GHJKILM,GHJKIML,GHJKLIM,GHJKLMI,GHJKMIL,GHJKMLI,GHJLIKM,GHJLIMK,GHJLKIM,GHJLKMI,GHJLMIK,GHJLMKI,GHJMIKL,GHJMILK,GHJMKIL," +
"GHJMKLI,GHJMLIK,GHJMLKI,GHKIJLM,GHKIJML,GHKILJM,GHKILMJ,GHKIMJL,GHKIMLJ,GHKJILM,GHKJIML,GHKJLIM,GHKJLMI,GHKJMIL,GHKJMLI," +
"GHKLIJM,GHKLIMJ,GHKLJIM,GHKLJMI,GHKLMIJ,GHKLMJI,GHKMIJL,GHKMILJ,GHKMJIL,GHKMJLI,GHKMLIJ,GHKMLJI,GHLIJKM,GHLIJMK,GHLIKJM," +
"GHLIKMJ,GHLIMJK,GHLIMKJ,GHLJIKM,GHLJIMK,GHLJKIM,GHLJKMI,GHLJMIK,GHLJMKI,GHLKIJM,GHLKIMJ,GHLKJIM,GHLKJMI,GHLKMIJ,GHLKMJI," +
"GHLMIJK,GHLMIKJ,GHLMJIK,GHLMJKI,GHLMKIJ,GHLMKJI,GHMIJKL,GHMIJLK,GHMIKJL,GHMIKLJ,GHMILJK,GHMILKJ,GHMJIKL,GHMJILK,GHMJKIL," +
"GHMJKLI,GHMJLIK,GHMJLKI,GHMKIJL,GHMKILJ,GHMKJIL,GHMKJLI,GHMKLIJ,GHMKLJI,GHMLIJK,GHMLIKJ,GHMLJIK,GHMLJKI,GHMLKIJ,GHMLKJI," +
"GIHJKLM,GIHJKML,GIHJLKM,GIHJLMK,GIHJMKL,GIHJMLK,GIHKJLM,GIHKJML,GIHKLJM,GIHKLMJ,GIHKMJL,GIHKMLJ,GIHLJKM,GIHLJMK,GIHLKJM," +
"GIHLKMJ,GIHLMJK,GIHLMKJ,GIHMJKL,GIHMJLK,GIHMKJL,GIHMKLJ,GIHMLJK,GIHMLKJ,GIJHKLM,GIJHKML,GIJHLKM,GIJHLMK,GIJHMKL,GIJHMLK," +
"GIJKHLM,GIJKHML,GIJKLHM,GIJKLMH,GIJKMHL,GIJKMLH,GIJLHKM,GIJLHMK,GIJLKHM,GIJLKMH,GIJLMHK,GIJLMKH,GIJMHKL,GIJMHLK,GIJMKHL," +
"GIJMKLH,GIJMLHK,GIJMLKH,GIKHJLM,GIKHJML,GIKHLJM,GIKHLMJ,GIKHMJL,GIKHMLJ,GIKJHLM,GIKJHML,GIKJLHM,GIKJLMH,GIKJMHL,GIKJMLH," +
"GIKLHJM,GIKLHMJ,GIKLJHM,GIKLJMH,GIKLMHJ,GIKLMJH,GIKMHJL,GIKMHLJ,GIKMJHL,GIKMJLH,GIKMLHJ,GIKMLJH,GILHJKM,GILHJMK,GILHKJM," +
"GILHKMJ,GILHMJK,GILHMKJ,GILJHKM,GILJHMK,GILJKHM,GILJKMH,GILJMHK,GILJMKH,GILKHJM,GILKHMJ,GILKJHM,GILKJMH,GILKMHJ,GILKMJH," +
"GILMHJK,GILMHKJ,GILMJHK,GILMJKH,GILMKHJ,GILMKJH,GIMHJKL,GIMHJLK,GIMHKJL,GIMHKLJ,GIMHLJK,GIMHLKJ,GIMJHKL,GIMJHLK,GIMJKHL," +
"GIMJKLH,GIMJLHK,GIMJLKH,GIMKHJL,GIMKHLJ,GIMKJHL,GIMKJLH,GIMKLHJ,GIMKLJH,GIMLHJK,GIMLHKJ,GIMLJHK,GIMLJKH,GIMLKHJ,GIMLKJH," +
"GJHIKLM,GJHIKML,GJHILKM,GJHILMK,GJHIMKL,GJHIMLK,GJHKILM,GJHKIML,GJHKLIM,GJHKLMI,GJHKMIL,GJHKMLI,GJHLIKM,GJHLIMK,GJHLKIM," +
"GJHLKMI,GJHLMIK,GJHLMKI,GJHMIKL,GJHMILK,GJHMKIL,GJHMKLI,GJHMLIK,GJHMLKI,GJIHKLM,GJIHKML,GJIHLKM,GJIHLMK,GJIHMKL,GJIHMLK," +
"GJIKHLM,GJIKHML,GJIKLHM,GJIKLMH,GJIKMHL,GJIKMLH,GJILHKM,GJILHMK,GJILKHM,GJILKMH,GJILMHK,GJILMKH,GJIMHKL,GJIMHLK,GJIMKHL," +
"GJIMKLH,GJIMLHK,GJIMLKH,GJKHILM,GJKHIML,GJKHLIM,GJKHLMI,GJKHMIL,GJKHMLI,GJKIHLM,GJKIHML,GJKILHM,GJKILMH,GJKIMHL,GJKIMLH," +
"GJKLHIM,GJKLHMI,GJKLIHM,GJKLIMH,GJKLMHI,GJKLMIH,GJKMHIL,GJKMHLI,GJKMIHL,GJKMILH,GJKMLHI,GJKMLIH,GJLHIKM,GJLHIMK,GJLHKIM," +
"GJLHKMI,GJLHMIK,GJLHMKI,GJLIHKM,GJLIHMK,GJLIKHM,GJLIKMH,GJLIMHK,GJLIMKH,GJLKHIM,GJLKHMI,GJLKIHM,GJLKIMH,GJLKMHI,GJLKMIH," +
"GJLMHIK,GJLMHKI,GJLMIHK,GJLMIKH,GJLMKHI,GJLMKIH,GJMHIKL,GJMHILK,GJMHKIL,GJMHKLI,GJMHLIK,GJMHLKI,GJMIHKL,GJMIHLK,GJMIKHL," +
"GJMIKLH,GJMILHK,GJMILKH,GJMKHIL,GJMKHLI,GJMKIHL,GJMKILH,GJMKLHI,GJMKLIH,GJMLHIK,GJMLHKI,GJMLIHK,GJMLIKH,GJMLKHI,GJMLKIH," +
"GKHIJLM,GKHIJML,GKHILJM,GKHILMJ,GKHIMJL,GKHIMLJ,GKHJILM,GKHJIML,GKHJLIM,GKHJLMI,GKHJMIL,GKHJMLI,GKHLIJM,GKHLIMJ,GKHLJIM," +
"GKHLJMI,GKHLMIJ,GKHLMJI,GKHMIJL,GKHMILJ,GKHMJIL,GKHMJLI,GKHMLIJ,GKHMLJI,GKIHJLM,GKIHJML,GKIHLJM,GKIHLMJ,GKIHMJL,GKIHMLJ," +
"GKIJHLM,GKIJHML,GKIJLHM,GKIJLMH,GKIJMHL,GKIJMLH,GKILHJM,GKILHMJ,GKILJHM,GKILJMH,GKILMHJ,GKILMJH,GKIMHJL,GKIMHLJ,GKIMJHL," +
"GKIMJLH,GKIMLHJ,GKIMLJH,GKJHILM,GKJHIML,GKJHLIM,GKJHLMI,GKJHMIL,GKJHMLI,GKJIHLM,GKJIHML,GKJILHM,GKJILMH,GKJIMHL,GKJIMLH," +
"GKJLHIM,GKJLHMI,GKJLIHM,GKJLIMH,GKJLMHI,GKJLMIH,GKJMHIL,GKJMHLI,GKJMIHL,GKJMILH,GKJMLHI,GKJMLIH,GKLHIJM,GKLHIMJ,GKLHJIM," +
"GKLHJMI,GKLHMIJ,GKLHMJI,GKLIHJM,GKLIHMJ,GKLIJHM,GKLIJMH,GKLIMHJ,GKLIMJH,GKLJHIM,GKLJHMI,GKLJIHM,GKLJIMH,GKLJMHI,GKLJMIH," +
"GKLMHIJ,GKLMHJI,GKLMIHJ,GKLMIJH,GKLMJHI,GKLMJIH,GKMHIJL,GKMHILJ,GKMHJIL,GKMHJLI,GKMHLIJ,GKMHLJI,GKMIHJL,GKMIHLJ,GKMIJHL," +
"GKMIJLH,GKMILHJ,GKMILJH,GKMJHIL,GKMJHLI,GKMJIHL,GKMJILH,GKMJLHI,GKMJLIH,GKMLHIJ,GKMLHJI,GKMLIHJ,GKMLIJH,GKMLJHI,GKMLJIH," +
"GLHIJKM,GLHIJMK,GLHIKJM,GLHIKMJ,GLHIMJK,GLHIMKJ,GLHJIKM,GLHJIMK,GLHJKIM,GLHJKMI,GLHJMIK,GLHJMKI,GLHKIJM,GLHKIMJ,GLHKJIM," +
"GLHKJMI,GLHKMIJ,GLHKMJI,GLHMIJK,GLHMIKJ,GLHMJIK,GLHMJKI,GLHMKIJ,GLHMKJI,GLIHJKM,GLIHJMK,GLIHKJM,GLIHKMJ,GLIHMJK,GLIHMKJ," +
"GLIJHKM,GLIJHMK,GLIJKHM,GLIJKMH,GLIJMHK,GLIJMKH,GLIKHJM,GLIKHMJ,GLIKJHM,GLIKJMH,GLIKMHJ,GLIKMJH,GLIMHJK,GLIMHKJ,GLIMJHK," +
"GLIMJKH,GLIMKHJ,GLIMKJH,GLJHIKM,GLJHIMK,GLJHKIM,GLJHKMI,GLJHMIK,GLJHMKI,GLJIHKM,GLJIHMK,GLJIKHM,GLJIKMH,GLJIMHK,GLJIMKH," +
"GLJKHIM,GLJKHMI,GLJKIHM,GLJKIMH,GLJKMHI,GLJKMIH,GLJMHIK,GLJMHKI,GLJMIHK,GLJMIKH,GLJMKHI,GLJMKIH,GLKHIJM,GLKHIMJ,GLKHJIM," +
"GLKHJMI,GLKHMIJ,GLKHMJI,GLKIHJM,GLKIHMJ,GLKIJHM,GLKIJMH,GLKIMHJ,GLKIMJH,GLKJHIM,GLKJHMI,GLKJIHM,GLKJIMH,GLKJMHI,GLKJMIH," +
"GLKMHIJ,GLKMHJI,GLKMIHJ,GLKMIJH,GLKMJHI,GLKMJIH,GLMHIJK,GLMHIKJ,GLMHJIK,GLMHJKI,GLMHKIJ,GLMHKJI,GLMIHJK,GLMIHKJ,GLMIJHK," +
"GLMIJKH,GLMIKHJ,GLMIKJH,GLMJHIK,GLMJHKI,GLMJIHK,GLMJIKH,GLMJKHI,GLMJKIH,GLMKHIJ,GLMKHJI,GLMKIHJ,GLMKIJH,GLMKJHI,GLMKJIH," +
"GMHIJKL,GMHIJLK,GMHIKJL,GMHIKLJ,GMHILJK,GMHILKJ,GMHJIKL,GMHJILK,GMHJKIL,GMHJKLI,GMHJLIK,GMHJLKI,GMHKIJL,GMHKILJ,GMHKJIL," +
"GMHKJLI,GMHKLIJ,GMHKLJI,GMHLIJK,GMHLIKJ,GMHLJIK,GMHLJKI,GMHLKIJ,GMHLKJI,GMIHJKL,GMIHJLK,GMIHKJL,GMIHKLJ,GMIHLJK,GMIHLKJ," +
"GMIJHKL,GMIJHLK,GMIJKHL,GMIJKLH,GMIJLHK,GMIJLKH,GMIKHJL,GMIKHLJ,GMIKJHL,GMIKJLH,GMIKLHJ,GMIKLJH,GMILHJK,GMILHKJ,GMILJHK," +
"GMILJKH,GMILKHJ,GMILKJH,GMJHIKL,GMJHILK,GMJHKIL,GMJHKLI,GMJHLIK,GMJHLKI,GMJIHKL,GMJIHLK,GMJIKHL,GMJIKLH,GMJILHK,GMJILKH," +
"GMJKHIL,GMJKHLI,GMJKIHL,GMJKILH,GMJKLHI,GMJKLIH,GMJLHIK,GMJLHKI,GMJLIHK,GMJLIKH,GMJLKHI,GMJLKIH,GMKHIJL,GMKHILJ,GMKHJIL," +
"GMKHJLI,GMKHLIJ,GMKHLJI,GMKIHJL,GMKIHLJ,GMKIJHL,GMKIJLH,GMKILHJ,GMKILJH,GMKJHIL,GMKJHLI,GMKJIHL,GMKJILH,GMKJLHI,GMKJLIH," +
"GMKLHIJ,GMKLHJI,GMKLIHJ,GMKLIJH,GMKLJHI,GMKLJIH,GMLHIJK,GMLHIKJ,GMLHJIK,GMLHJKI,GMLHKIJ,GMLHKJI,GMLIHJK,GMLIHKJ,GMLIJHK," +
"GMLIJKH,GMLIKHJ,GMLIKJH,GMLJHIK,GMLJHKI,GMLJIHK,GMLJIKH,GMLJKHI,GMLJKIH,GMLKHIJ,GMLKHJI,GMLKIHJ,GMLKIJH,GMLKJHI,GMLKJIH," +
"HGIJKLM,HGIJKML,HGIJLKM,HGIJLMK,HGIJMKL,HGIJMLK,HGIKJLM,HGIKJML,HGIKLJM,HGIKLMJ,HGIKMJL,HGIKMLJ,HGILJKM,HGILJMK,HGILKJM," +
"HGILKMJ,HGILMJK,HGILMKJ,HGIMJKL,HGIMJLK,HGIMKJL,HGIMKLJ,HGIMLJK,HGIMLKJ,HGJIKLM,HGJIKML,HGJILKM,HGJILMK,HGJIMKL,HGJIMLK," +
"HGJKILM,HGJKIML,HGJKLIM,HGJKLMI,HGJKMIL,HGJKMLI,HGJLIKM,HGJLIMK,HGJLKIM,HGJLKMI,HGJLMIK,HGJLMKI,HGJMIKL,HGJMILK,HGJMKIL," +
"HGJMKLI,HGJMLIK,HGJMLKI,HGKIJLM,HGKIJML,HGKILJM,HGKILMJ,HGKIMJL,HGKIMLJ,HGKJILM,HGKJIML,HGKJLIM,HGKJLMI,HGKJMIL,HGKJMLI," +
"HGKLIJM,HGKLIMJ,HGKLJIM,HGKLJMI,HGKLMIJ,HGKLMJI,HGKMIJL,HGKMILJ,HGKMJIL,HGKMJLI,HGKMLIJ,HGKMLJI,HGLIJKM,HGLIJMK,HGLIKJM," +
"HGLIKMJ,HGLIMJK,HGLIMKJ,HGLJIKM,HGLJIMK,HGLJKIM,HGLJKMI,HGLJMIK,HGLJMKI,HGLKIJM,HGLKIMJ,HGLKJIM,HGLKJMI,HGLKMIJ,HGLKMJI," +
"HGLMIJK,HGLMIKJ,HGLMJIK,HGLMJKI,HGLMKIJ,HGLMKJI,HGMIJKL,HGMIJLK,HGMIKJL,HGMIKLJ,HGMILJK,HGMILKJ,HGMJIKL,HGMJILK,HGMJKIL," +
"HGMJKLI,HGMJLIK,HGMJLKI,HGMKIJL,HGMKILJ,HGMKJIL,HGMKJLI,HGMKLIJ,HGMKLJI,HGMLIJK,HGMLIKJ,HGMLJIK,HGMLJKI,HGMLKIJ,HGMLKJI," +
"HIGJKLM,HIGJKML,HIGJLKM,HIGJLMK,HIGJMKL,HIGJMLK,HIGKJLM,HIGKJML,HIGKLJM,HIGKLMJ,HIGKMJL,HIGKMLJ,HIGLJKM,HIGLJMK,HIGLKJM," +
"HIGLKMJ,HIGLMJK,HIGLMKJ,HIGMJKL,HIGMJLK,HIGMKJL,HIGMKLJ,HIGMLJK,HIGMLKJ,HIJGKLM,HIJGKML,HIJGLKM,HIJGLMK,HIJGMKL,HIJGMLK," +
"HIJKGLM,HIJKGML,HIJKLGM,HIJKLMG,HIJKMGL,HIJKMLG,HIJLGKM,HIJLGMK,HIJLKGM,HIJLKMG,HIJLMGK,HIJLMKG,HIJMGKL,HIJMGLK,HIJMKGL," +
"HIJMKLG,HIJMLGK,HIJMLKG,HIKGJLM,HIKGJML,HIKGLJM,HIKGLMJ,HIKGMJL,HIKGMLJ,HIKJGLM,HIKJGML,HIKJLGM,HIKJLMG,HIKJMGL,HIKJMLG," +
"HIKLGJM,HIKLGMJ,HIKLJGM,HIKLJMG,HIKLMGJ,HIKLMJG,HIKMGJL,HIKMGLJ,HIKMJGL,HIKMJLG,HIKMLGJ,HIKMLJG,HILGJKM,HILGJMK,HILGKJM," +
"HILGKMJ,HILGMJK,HILGMKJ,HILJGKM,HILJGMK,HILJKGM,HILJKMG,HILJMGK,HILJMKG,HILKGJM,HILKGMJ,HILKJGM,HILKJMG,HILKMGJ,HILKMJG," +
"HILMGJK,HILMGKJ,HILMJGK,HILMJKG,HILMKGJ,HILMKJG,HIMGJKL,HIMGJLK,HIMGKJL,HIMGKLJ,HIMGLJK,HIMGLKJ,HIMJGKL,HIMJGLK,HIMJKGL," +
"HIMJKLG,HIMJLGK,HIMJLKG,HIMKGJL,HIMKGLJ,HIMKJGL,HIMKJLG,HIMKLGJ,HIMKLJG,HIMLGJK,HIMLGKJ,HIMLJGK,HIMLJKG,HIMLKGJ,HIMLKJG," +
"HJGIKLM,HJGIKML,HJGILKM,HJGILMK,HJGIMKL,HJGIMLK,HJGKILM,HJGKIML,HJGKLIM,HJGKLMI,HJGKMIL,HJGKMLI,HJGLIKM,HJGLIMK,HJGLKIM," +
"HJGLKMI,HJGLMIK,HJGLMKI,HJGMIKL,HJGMILK,HJGMKIL,HJGMKLI,HJGMLIK,HJGMLKI,HJIGKLM,HJIGKML,HJIGLKM,HJIGLMK,HJIGMKL,HJIGMLK," +
"HJIKGLM,HJIKGML,HJIKLGM,HJIKLMG,HJIKMGL,HJIKMLG,HJILGKM,HJILGMK,HJILKGM,HJILKMG,HJILMGK,HJILMKG,HJIMGKL,HJIMGLK,HJIMKGL," +
"HJIMKLG,HJIMLGK,HJIMLKG,HJKGILM,HJKGIML,HJKGLIM,HJKGLMI,HJKGMIL,HJKGMLI,HJKIGLM,HJKIGML,HJKILGM,HJKILMG,HJKIMGL,HJKIMLG," +
"HJKLGIM,HJKLGMI,HJKLIGM,HJKLIMG,HJKLMGI,HJKLMIG,HJKMGIL,HJKMGLI,HJKMIGL,HJKMILG,HJKMLGI,HJKMLIG,HJLGIKM,HJLGIMK,HJLGKIM," +
"HJLGKMI,HJLGMIK,HJLGMKI,HJLIGKM,HJLIGMK,HJLIKGM,HJLIKMG,HJLIMGK,HJLIMKG,HJLKGIM,HJLKGMI,HJLKIGM,HJLKIMG,HJLKMGI,HJLKMIG," +
"HJLMGIK,HJLMGKI,HJLMIGK,HJLMIKG,HJLMKGI,HJLMKIG,HJMGIKL,HJMGILK,HJMGKIL,HJMGKLI,HJMGLIK,HJMGLKI,HJMIGKL,HJMIGLK,HJMIKGL," +
"HJMIKLG,HJMILGK,HJMILKG,HJMKGIL,HJMKGLI,HJMKIGL,HJMKILG,HJMKLGI,HJMKLIG,HJMLGIK,HJMLGKI,HJMLIGK,HJMLIKG,HJMLKGI,HJMLKIG," +
"HKGIJLM,HKGIJML,HKGILJM,HKGILMJ,HKGIMJL,HKGIMLJ,HKGJILM,HKGJIML,HKGJLIM,HKGJLMI,HKGJMIL,HKGJMLI,HKGLIJM,HKGLIMJ,HKGLJIM," +
"HKGLJMI,HKGLMIJ,HKGLMJI,HKGMIJL,HKGMILJ,HKGMJIL,HKGMJLI,HKGMLIJ,HKGMLJI,HKIGJLM,HKIGJML,HKIGLJM,HKIGLMJ,HKIGMJL,HKIGMLJ," +
"HKIJGLM,HKIJGML,HKIJLGM,HKIJLMG,HKIJMGL,HKIJMLG,HKILGJM,HKILGMJ,HKILJGM,HKILJMG,HKILMGJ,HKILMJG,HKIMGJL,HKIMGLJ,HKIMJGL," +
"HKIMJLG,HKIMLGJ,HKIMLJG,HKJGILM,HKJGIML,HKJGLIM,HKJGLMI,HKJGMIL,HKJGMLI,HKJIGLM,HKJIGML,HKJILGM,HKJILMG,HKJIMGL,HKJIMLG," +
"HKJLGIM,HKJLGMI,HKJLIGM,HKJLIMG,HKJLMGI,HKJLMIG,HKJMGIL,HKJMGLI,HKJMIGL,HKJMILG,HKJMLGI,HKJMLIG,HKLGIJM,HKLGIMJ,HKLGJIM," +
"HKLGJMI,HKLGMIJ,HKLGMJI,HKLIGJM,HKLIGMJ,HKLIJGM,HKLIJMG,HKLIMGJ,HKLIMJG,HKLJGIM,HKLJGMI,HKLJIGM,HKLJIMG,HKLJMGI,HKLJMIG," +
"HKLMGIJ,HKLMGJI,HKLMIGJ,HKLMIJG,HKLMJGI,HKLMJIG,HKMGIJL,HKMGILJ,HKMGJIL,HKMGJLI,HKMGLIJ,HKMGLJI,HKMIGJL,HKMIGLJ,HKMIJGL," +
"HKMIJLG,HKMILGJ,HKMILJG,HKMJGIL,HKMJGLI,HKMJIGL,HKMJILG,HKMJLGI,HKMJLIG,HKMLGIJ,HKMLGJI,HKMLIGJ,HKMLIJG,HKMLJGI,HKMLJIG," +
"HLGIJKM,HLGIJMK,HLGIKJM,HLGIKMJ,HLGIMJK,HLGIMKJ,HLGJIKM,HLGJIMK,HLGJKIM,HLGJKMI,HLGJMIK,HLGJMKI,HLGKIJM,HLGKIMJ,HLGKJIM," +
"HLGKJMI,HLGKMIJ,HLGKMJI,HLGMIJK,HLGMIKJ,HLGMJIK,HLGMJKI,HLGMKIJ,HLGMKJI,HLIGJKM,HLIGJMK,HLIGKJM,HLIGKMJ,HLIGMJK,HLIGMKJ," +
"HLIJGKM,HLIJGMK,HLIJKGM,HLIJKMG,HLIJMGK,HLIJMKG,HLIKGJM,HLIKGMJ,HLIKJGM,HLIKJMG,HLIKMGJ,HLIKMJG,HLIMGJK,HLIMGKJ,HLIMJGK," +
"HLIMJKG,HLIMKGJ,HLIMKJG,HLJGIKM,HLJGIMK,HLJGKIM,HLJGKMI,HLJGMIK,HLJGMKI,HLJIGKM,HLJIGMK,HLJIKGM,HLJIKMG,HLJIMGK,HLJIMKG," +
"HLJKGIM,HLJKGMI,HLJKIGM,HLJKIMG,HLJKMGI,HLJKMIG,HLJMGIK,HLJMGKI,HLJMIGK,HLJMIKG,HLJMKGI,HLJMKIG,HLKGIJM,HLKGIMJ,HLKGJIM," +
"HLKGJMI,HLKGMIJ,HLKGMJI,HLKIGJM,HLKIGMJ,HLKIJGM,HLKIJMG,HLKIMGJ,HLKIMJG,HLKJGIM,HLKJGMI,HLKJIGM,HLKJIMG,HLKJMGI,HLKJMIG," +
"HLKMGIJ,HLKMGJI,HLKMIGJ,HLKMIJG,HLKMJGI,HLKMJIG,HLMGIJK,HLMGIKJ,HLMGJIK,HLMGJKI,HLMGKIJ,HLMGKJI,HLMIGJK,HLMIGKJ,HLMIJGK," +
"HLMIJKG,HLMIKGJ,HLMIKJG,HLMJGIK,HLMJGKI,HLMJIGK,HLMJIKG,HLMJKGI,HLMJKIG,HLMKGIJ,HLMKGJI,HLMKIGJ,HLMKIJG,HLMKJGI,HLMKJIG," +
"HMGIJKL,HMGIJLK,HMGIKJL,HMGIKLJ,HMGILJK,HMGILKJ,HMGJIKL,HMGJILK,HMGJKIL,HMGJKLI,HMGJLIK,HMGJLKI,HMGKIJL,HMGKILJ,HMGKJIL," +
"HMGKJLI,HMGKLIJ,HMGKLJI,HMGLIJK,HMGLIKJ,HMGLJIK,HMGLJKI,HMGLKIJ,HMGLKJI,HMIGJKL,HMIGJLK,HMIGKJL,HMIGKLJ,HMIGLJK,HMIGLKJ," +
"HMIJGKL,HMIJGLK,HMIJKGL,HMIJKLG,HMIJLGK,HMIJLKG,HMIKGJL,HMIKGLJ,HMIKJGL,HMIKJLG,HMIKLGJ,HMIKLJG,HMILGJK,HMILGKJ,HMILJGK," +
"HMILJKG,HMILKGJ,HMILKJG,HMJGIKL,HMJGILK,HMJGKIL,HMJGKLI,HMJGLIK,HMJGLKI,HMJIGKL,HMJIGLK,HMJIKGL,HMJIKLG,HMJILGK,HMJILKG," +
"HMJKGIL,HMJKGLI,HMJKIGL,HMJKILG,HMJKLGI,HMJKLIG,HMJLGIK,HMJLGKI,HMJLIGK,HMJLIKG,HMJLKGI,HMJLKIG,HMKGIJL,HMKGILJ,HMKGJIL," +
"HMKGJLI,HMKGLIJ,HMKGLJI,HMKIGJL,HMKIGLJ,HMKIJGL,HMKIJLG,HMKILGJ,HMKILJG,HMKJGIL,HMKJGLI,HMKJIGL,HMKJILG,HMKJLGI,HMKJLIG," +
"HMKLGIJ,HMKLGJI,HMKLIGJ,HMKLIJG,HMKLJGI,HMKLJIG,HMLGIJK,HMLGIKJ,HMLGJIK,HMLGJKI,HMLGKIJ,HMLGKJI,HMLIGJK,HMLIGKJ,HMLIJGK," +
"HMLIJKG,HMLIKGJ,HMLIKJG,HMLJGIK,HMLJGKI,HMLJIGK,HMLJIKG,HMLJKGI,HMLJKIG,HMLKGIJ,HMLKGJI,HMLKIGJ,HMLKIJG,HMLKJGI,HMLKJIG," +
"IGHJKLM,IGHJKML,IGHJLKM,IGHJLMK,IGHJMKL,IGHJMLK,IGHKJLM,IGHKJML,IGHKLJM,IGHKLMJ,IGHKMJL,IGHKMLJ,IGHLJKM,IGHLJMK,IGHLKJM," +
"IGHLKMJ,IGHLMJK,IGHLMKJ,IGHMJKL,IGHMJLK,IGHMKJL,IGHMKLJ,IGHMLJK,IGHMLKJ,IGJHKLM,IGJHKML,IGJHLKM,IGJHLMK,IGJHMKL,IGJHMLK," +
"IGJKHLM,IGJKHML,IGJKLHM,IGJKLMH,IGJKMHL,IGJKMLH,IGJLHKM,IGJLHMK,IGJLKHM,IGJLKMH,IGJLMHK,IGJLMKH,IGJMHKL,IGJMHLK,IGJMKHL," +
"IGJMKLH,IGJMLHK,IGJMLKH,IGKHJLM,IGKHJML,IGKHLJM,IGKHLMJ,IGKHMJL,IGKHMLJ,IGKJHLM,IGKJHML,IGKJLHM,IGKJLMH,IGKJMHL,IGKJMLH," +
"IGKLHJM,IGKLHMJ,IGKLJHM,IGKLJMH,IGKLMHJ,IGKLMJH,IGKMHJL,IGKMHLJ,IGKMJHL,IGKMJLH,IGKMLHJ,IGKMLJH,IGLHJKM,IGLHJMK,IGLHKJM," +
"IGLHKMJ,IGLHMJK,IGLHMKJ,IGLJHKM,IGLJHMK,IGLJKHM,IGLJKMH,IGLJMHK,IGLJMKH,IGLKHJM,IGLKHMJ,IGLKJHM,IGLKJMH,IGLKMHJ,IGLKMJH," +
"IGLMHJK,IGLMHKJ,IGLMJHK,IGLMJKH,IGLMKHJ,IGLMKJH,IGMHJKL,IGMHJLK,IGMHKJL,IGMHKLJ,IGMHLJK,IGMHLKJ,IGMJHKL,IGMJHLK,IGMJKHL," +
"IGMJKLH,IGMJLHK,IGMJLKH,IGMKHJL,IGMKHLJ,IGMKJHL,IGMKJLH,IGMKLHJ,IGMKLJH,IGMLHJK,IGMLHKJ,IGMLJHK,IGMLJKH,IGMLKHJ,IGMLKJH," +
"IHGJKLM,IHGJKML,IHGJLKM,IHGJLMK,IHGJMKL,IHGJMLK,IHGKJLM,IHGKJML,IHGKLJM,IHGKLMJ,IHGKMJL,IHGKMLJ,IHGLJKM,IHGLJMK,IHGLKJM," +
"IHGLKMJ,IHGLMJK,IHGLMKJ,IHGMJKL,IHGMJLK,IHGMKJL,IHGMKLJ,IHGMLJK,IHGMLKJ,IHJGKLM,IHJGKML,IHJGLKM,IHJGLMK,IHJGMKL,IHJGMLK," +
"IHJKGLM,IHJKGML,IHJKLGM,IHJKLMG,IHJKMGL,IHJKMLG,IHJLGKM,IHJLGMK,IHJLKGM,IHJLKMG,IHJLMGK,IHJLMKG,IHJMGKL,IHJMGLK,IHJMKGL," +
"IHJMKLG,IHJMLGK,IHJMLKG,IHKGJLM,IHKGJML,IHKGLJM,IHKGLMJ,IHKGMJL,IHKGMLJ,IHKJGLM,IHKJGML,IHKJLGM,IHKJLMG,IHKJMGL,IHKJMLG," +
"IHKLGJM,IHKLGMJ,IHKLJGM,IHKLJMG,IHKLMGJ,IHKLMJG,IHKMGJL,IHKMGLJ,IHKMJGL,IHKMJLG,IHKMLGJ,IHKMLJG,IHLGJKM,IHLGJMK,IHLGKJM," +
"IHLGKMJ,IHLGMJK,IHLGMKJ,IHLJGKM,IHLJGMK,IHLJKGM,IHLJKMG,IHLJMGK,IHLJMKG,IHLKGJM,IHLKGMJ,IHLKJGM,IHLKJMG,IHLKMGJ,IHLKMJG," +
"IHLMGJK,IHLMGKJ,IHLMJGK,IHLMJKG,IHLMKGJ,IHLMKJG,IHMGJKL,IHMGJLK,IHMGKJL,IHMGKLJ,IHMGLJK,IHMGLKJ,IHMJGKL,IHMJGLK,IHMJKGL," +
"IHMJKLG,IHMJLGK,IHMJLKG,IHMKGJL,IHMKGLJ,IHMKJGL,IHMKJLG,IHMKLGJ,IHMKLJG,IHMLGJK,IHMLGKJ,IHMLJGK,IHMLJKG,IHMLKGJ,IHMLKJG," +
"IJGHKLM,IJGHKML,IJGHLKM,IJGHLMK,IJGHMKL,IJGHMLK,IJGKHLM,IJGKHML,IJGKLHM,IJGKLMH,IJGKMHL,IJGKMLH,IJGLHKM,IJGLHMK,IJGLKHM," +
"IJGLKMH,IJGLMHK,IJGLMKH,IJGMHKL,IJGMHLK,IJGMKHL,IJGMKLH,IJGMLHK,IJGMLKH,IJHGKLM,IJHGKML,IJHGLKM,IJHGLMK,IJHGMKL,IJHGMLK," +
"IJHKGLM,IJHKGML,IJHKLGM,IJHKLMG,IJHKMGL,IJHKMLG,IJHLGKM,IJHLGMK,IJHLKGM,IJHLKMG,IJHLMGK,IJHLMKG,IJHMGKL,IJHMGLK,IJHMKGL," +
"IJHMKLG,IJHMLGK,IJHMLKG,IJKGHLM,IJKGHML,IJKGLHM,IJKGLMH,IJKGMHL,IJKGMLH,IJKHGLM,IJKHGML,IJKHLGM,IJKHLMG,IJKHMGL,IJKHMLG," +
"IJKLGHM,IJKLGMH,IJKLHGM,IJKLHMG,IJKLMGH,IJKLMHG,IJKMGHL,IJKMGLH,IJKMHGL,IJKMHLG,IJKMLGH,IJKMLHG,IJLGHKM,IJLGHMK,IJLGKHM," +
"IJLGKMH,IJLGMHK,IJLGMKH,IJLHGKM,IJLHGMK,IJLHKGM,IJLHKMG,IJLHMGK,IJLHMKG,IJLKGHM,IJLKGMH,IJLKHGM,IJLKHMG,IJLKMGH,IJLKMHG," +
"IJLMGHK,IJLMGKH,IJLMHGK,IJLMHKG,IJLMKGH,IJLMKHG,IJMGHKL,IJMGHLK,IJMGKHL,IJMGKLH,IJMGLHK,IJMGLKH,IJMHGKL,IJMHGLK,IJMHKGL," +
"IJMHKLG,IJMHLGK,IJMHLKG,IJMKGHL,IJMKGLH,IJMKHGL,IJMKHLG,IJMKLGH,IJMKLHG,IJMLGHK,IJMLGKH,IJMLHGK,IJMLHKG,IJMLKGH,IJMLKHG," +
"IKGHJLM,IKGHJML,IKGHLJM,IKGHLMJ,IKGHMJL,IKGHMLJ,IKGJHLM,IKGJHML,IKGJLHM,IKGJLMH,IKGJMHL,IKGJMLH,IKGLHJM,IKGLHMJ,IKGLJHM," +
"IKGLJMH,IKGLMHJ,IKGLMJH,IKGMHJL,IKGMHLJ,IKGMJHL,IKGMJLH,IKGMLHJ,IKGMLJH,IKHGJLM,IKHGJML,IKHGLJM,IKHGLMJ,IKHGMJL,IKHGMLJ," +
"IKHJGLM,IKHJGML,IKHJLGM,IKHJLMG,IKHJMGL,IKHJMLG,IKHLGJM,IKHLGMJ,IKHLJGM,IKHLJMG,IKHLMGJ,IKHLMJG,IKHMGJL,IKHMGLJ,IKHMJGL," +
"IKHMJLG,IKHMLGJ,IKHMLJG,IKJGHLM,IKJGHML,IKJGLHM,IKJGLMH,IKJGMHL,IKJGMLH,IKJHGLM,IKJHGML,IKJHLGM,IKJHLMG,IKJHMGL,IKJHMLG," +
"IKJLGHM,IKJLGMH,IKJLHGM,IKJLHMG,IKJLMGH,IKJLMHG,IKJMGHL,IKJMGLH,IKJMHGL,IKJMHLG,IKJMLGH,IKJMLHG,IKLGHJM,IKLGHMJ,IKLGJHM," +
"IKLGJMH,IKLGMHJ,IKLGMJH,IKLHGJM,IKLHGMJ,IKLHJGM,IKLHJMG,IKLHMGJ,IKLHMJG,IKLJGHM,IKLJGMH,IKLJHGM,IKLJHMG,IKLJMGH,IKLJMHG," +
"IKLMGHJ,IKLMGJH,IKLMHGJ,IKLMHJG,IKLMJGH,IKLMJHG,IKMGHJL,IKMGHLJ,IKMGJHL,IKMGJLH,IKMGLHJ,IKMGLJH,IKMHGJL,IKMHGLJ,IKMHJGL," +
"IKMHJLG,IKMHLGJ,IKMHLJG,IKMJGHL,IKMJGLH,IKMJHGL,IKMJHLG,IKMJLGH,IKMJLHG,IKMLGHJ,IKMLGJH,IKMLHGJ,IKMLHJG,IKMLJGH,IKMLJHG," +
"ILGHJKM,ILGHJMK,ILGHKJM,ILGHKMJ,ILGHMJK,ILGHMKJ,ILGJHKM,ILGJHMK,ILGJKHM,ILGJKMH,ILGJMHK,ILGJMKH,ILGKHJM,ILGKHMJ,ILGKJHM," +
"ILGKJMH,ILGKMHJ,ILGKMJH,ILGMHJK,ILGMHKJ,ILGMJHK,ILGMJKH,ILGMKHJ,ILGMKJH,ILHGJKM,ILHGJMK,ILHGKJM,ILHGKMJ,ILHGMJK,ILHGMKJ," +
"ILHJGKM,ILHJGMK,ILHJKGM,ILHJKMG,ILHJMGK,ILHJMKG,ILHKGJM,ILHKGMJ,ILHKJGM,ILHKJMG,ILHKMGJ,ILHKMJG,ILHMGJK,ILHMGKJ,ILHMJGK," +
"ILHMJKG,ILHMKGJ,ILHMKJG,ILJGHKM,ILJGHMK,ILJGKHM,ILJGKMH,ILJGMHK,ILJGMKH,ILJHGKM,ILJHGMK,ILJHKGM,ILJHKMG,ILJHMGK,ILJHMKG," +
"ILJKGHM,ILJKGMH,ILJKHGM,ILJKHMG,ILJKMGH,ILJKMHG,ILJMGHK,ILJMGKH,ILJMHGK,ILJMHKG,ILJMKGH,ILJMKHG,ILKGHJM,ILKGHMJ,ILKGJHM," +
"ILKGJMH,ILKGMHJ,ILKGMJH,ILKHGJM,ILKHGMJ,ILKHJGM,ILKHJMG,ILKHMGJ,ILKHMJG,ILKJGHM,ILKJGMH,ILKJHGM,ILKJHMG,ILKJMGH,ILKJMHG," +
"ILKMGHJ,ILKMGJH,ILKMHGJ,ILKMHJG,ILKMJGH,ILKMJHG,ILMGHJK,ILMGHKJ,ILMGJHK,ILMGJKH,ILMGKHJ,ILMGKJH,ILMHGJK,ILMHGKJ,ILMHJGK," +
"ILMHJKG,ILMHKGJ,ILMHKJG,ILMJGHK,ILMJGKH,ILMJHGK,ILMJHKG,ILMJKGH,ILMJKHG,ILMKGHJ,ILMKGJH,ILMKHGJ,ILMKHJG,ILMKJGH,ILMKJHG," +
"IMGHJKL,IMGHJLK,IMGHKJL,IMGHKLJ,IMGHLJK,IMGHLKJ,IMGJHKL,IMGJHLK,IMGJKHL,IMGJKLH,IMGJLHK,IMGJLKH,IMGKHJL,IMGKHLJ,IMGKJHL," +
"IMGKJLH,IMGKLHJ,IMGKLJH,IMGLHJK,IMGLHKJ,IMGLJHK,IMGLJKH,IMGLKHJ,IMGLKJH,IMHGJKL,IMHGJLK,IMHGKJL,IMHGKLJ,IMHGLJK,IMHGLKJ," +
"IMHJGKL,IMHJGLK,IMHJKGL,IMHJKLG,IMHJLGK,IMHJLKG,IMHKGJL,IMHKGLJ,IMHKJGL,IMHKJLG,IMHKLGJ,IMHKLJG,IMHLGJK,IMHLGKJ,IMHLJGK," +
"IMHLJKG,IMHLKGJ,IMHLKJG,IMJGHKL,IMJGHLK,IMJGKHL,IMJGKLH,IMJGLHK,IMJGLKH,IMJHGKL,IMJHGLK,IMJHKGL,IMJHKLG,IMJHLGK,IMJHLKG," +
"IMJKGHL,IMJKGLH,IMJKHGL,IMJKHLG,IMJKLGH,IMJKLHG,IMJLGHK,IMJLGKH,IMJLHGK,IMJLHKG,IMJLKGH,IMJLKHG,IMKGHJL,IMKGHLJ,IMKGJHL," +
"IMKGJLH,IMKGLHJ,IMKGLJH,IMKHGJL,IMKHGLJ,IMKHJGL,IMKHJLG,IMKHLGJ,IMKHLJG,IMKJGHL,IMKJGLH,IMKJHGL,IMKJHLG,IMKJLGH,IMKJLHG," +
"IMKLGHJ,IMKLGJH,IMKLHGJ,IMKLHJG,IMKLJGH,IMKLJHG,IMLGHJK,IMLGHKJ,IMLGJHK,IMLGJKH,IMLGKHJ,IMLGKJH,IMLHGJK,IMLHGKJ,IMLHJGK," +
"IMLHJKG,IMLHKGJ,IMLHKJG,IMLJGHK,IMLJGKH,IMLJHGK,IMLJHKG,IMLJKGH,IMLJKHG,IMLKGHJ,IMLKGJH,IMLKHGJ,IMLKHJG,IMLKJGH,IMLKJHG," +
"JGHIKLM,JGHIKML,JGHILKM,JGHILMK,JGHIMKL,JGHIMLK,JGHKILM,JGHKIML,JGHKLIM,JGHKLMI,JGHKMIL,JGHKMLI,JGHLIKM,JGHLIMK,JGHLKIM," +
"JGHLKMI,JGHLMIK,JGHLMKI,JGHMIKL,JGHMILK,JGHMKIL,JGHMKLI,JGHMLIK,JGHMLKI,JGIHKLM,JGIHKML,JGIHLKM,JGIHLMK,JGIHMKL,JGIHMLK," +
"JGIKHLM,JGIKHML,JGIKLHM,JGIKLMH,JGIKMHL,JGIKMLH,JGILHKM,JGILHMK,JGILKHM,JGILKMH,JGILMHK,JGILMKH,JGIMHKL,JGIMHLK,JGIMKHL," +
"JGIMKLH,JGIMLHK,JGIMLKH,JGKHILM,JGKHIML,JGKHLIM,JGKHLMI,JGKHMIL,JGKHMLI,JGKIHLM,JGKIHML,JGKILHM,JGKILMH,JGKIMHL,JGKIMLH," +
"JGKLHIM,JGKLHMI,JGKLIHM,JGKLIMH,JGKLMHI,JGKLMIH,JGKMHIL,JGKMHLI,JGKMIHL,JGKMILH,JGKMLHI,JGKMLIH,JGLHIKM,JGLHIMK,JGLHKIM," +
"JGLHKMI,JGLHMIK,JGLHMKI,JGLIHKM,JGLIHMK,JGLIKHM,JGLIKMH,JGLIMHK,JGLIMKH,JGLKHIM,JGLKHMI,JGLKIHM,JGLKIMH,JGLKMHI,JGLKMIH," +
"JGLMHIK,JGLMHKI,JGLMIHK,JGLMIKH,JGLMKHI,JGLMKIH,JGMHIKL,JGMHILK,JGMHKIL,JGMHKLI,JGMHLIK,JGMHLKI,JGMIHKL,JGMIHLK,JGMIKHL," +
"JGMIKLH,JGMILHK,JGMILKH,JGMKHIL,JGMKHLI,JGMKIHL,JGMKILH,JGMKLHI,JGMKLIH,JGMLHIK,JGMLHKI,JGMLIHK,JGMLIKH,JGMLKHI,JGMLKIH," +
"JHGIKLM,JHGIKML,JHGILKM,JHGILMK,JHGIMKL,JHGIMLK,JHGKILM,JHGKIML,JHGKLIM,JHGKLMI,JHGKMIL,JHGKMLI,JHGLIKM,JHGLIMK,JHGLKIM," +
"JHGLKMI,JHGLMIK,JHGLMKI,JHGMIKL,JHGMILK,JHGMKIL,JHGMKLI,JHGMLIK,JHGMLKI,JHIGKLM,JHIGKML,JHIGLKM,JHIGLMK,JHIGMKL,JHIGMLK," +
"JHIKGLM,JHIKGML,JHIKLGM,JHIKLMG,JHIKMGL,JHIKMLG,JHILGKM,JHILGMK,JHILKGM,JHILKMG,JHILMGK,JHILMKG,JHIMGKL,JHIMGLK,JHIMKGL," +
"JHIMKLG,JHIMLGK,JHIMLKG,JHKGILM,JHKGIML,JHKGLIM,JHKGLMI,JHKGMIL,JHKGMLI,JHKIGLM,JHKIGML,JHKILGM,JHKILMG,JHKIMGL,JHKIMLG," +
"JHKLGIM,JHKLGMI,JHKLIGM,JHKLIMG,JHKLMGI,JHKLMIG,JHKMGIL,JHKMGLI,JHKMIGL,JHKMILG,JHKMLGI,JHKMLIG,JHLGIKM,JHLGIMK,JHLGKIM," +
"JHLGKMI,JHLGMIK,JHLGMKI,JHLIGKM,JHLIGMK,JHLIKGM,JHLIKMG,JHLIMGK,JHLIMKG,JHLKGIM,JHLKGMI,JHLKIGM,JHLKIMG,JHLKMGI,JHLKMIG," +
"JHLMGIK,JHLMGKI,JHLMIGK,JHLMIKG,JHLMKGI,JHLMKIG,JHMGIKL,JHMGILK,JHMGKIL,JHMGKLI,JHMGLIK,JHMGLKI,JHMIGKL,JHMIGLK,JHMIKGL," +
"JHMIKLG,JHMILGK,JHMILKG,JHMKGIL,JHMKGLI,JHMKIGL,JHMKILG,JHMKLGI,JHMKLIG,JHMLGIK,JHMLGKI,JHMLIGK,JHMLIKG,JHMLKGI,JHMLKIG," +
"JIGHKLM,JIGHKML,JIGHLKM,JIGHLMK,JIGHMKL,JIGHMLK,JIGKHLM,JIGKHML,JIGKLHM,JIGKLMH,JIGKMHL,JIGKMLH,JIGLHKM,JIGLHMK,JIGLKHM," +
"JIGLKMH,JIGLMHK,JIGLMKH,JIGMHKL,JIGMHLK,JIGMKHL,JIGMKLH,JIGMLHK,JIGMLKH,JIHGKLM,JIHGKML,JIHGLKM,JIHGLMK,JIHGMKL,JIHGMLK," +
"JIHKGLM,JIHKGML,JIHKLGM,JIHKLMG,JIHKMGL,JIHKMLG,JIHLGKM,JIHLGMK,JIHLKGM,JIHLKMG,JIHLMGK,JIHLMKG,JIHMGKL,JIHMGLK,JIHMKGL," +
"JIHMKLG,JIHMLGK,JIHMLKG,JIKGHLM,JIKGHML,JIKGLHM,JIKGLMH,JIKGMHL,JIKGMLH,JIKHGLM,JIKHGML,JIKHLGM,JIKHLMG,JIKHMGL,JIKHMLG," +
"JIKLGHM,JIKLGMH,JIKLHGM,JIKLHMG,JIKLMGH,JIKLMHG,JIKMGHL,JIKMGLH,JIKMHGL,JIKMHLG,JIKMLGH,JIKMLHG,JILGHKM,JILGHMK,JILGKHM," +
"JILGKMH,JILGMHK,JILGMKH,JILHGKM,JILHGMK,JILHKGM,JILHKMG,JILHMGK,JILHMKG,JILKGHM,JILKGMH,JILKHGM,JILKHMG,JILKMGH,JILKMHG," +
"JILMGHK,JILMGKH,JILMHGK,JILMHKG,JILMKGH,JILMKHG,JIMGHKL,JIMGHLK,JIMGKHL,JIMGKLH,JIMGLHK,JIMGLKH,JIMHGKL,JIMHGLK,JIMHKGL," +
"JIMHKLG,JIMHLGK,JIMHLKG,JIMKGHL,JIMKGLH,JIMKHGL,JIMKHLG,JIMKLGH,JIMKLHG,JIMLGHK,JIMLGKH,JIMLHGK,JIMLHKG,JIMLKGH,JIMLKHG," +
"JKGHILM,JKGHIML,JKGHLIM,JKGHLMI,JKGHMIL,JKGHMLI,JKGIHLM,JKGIHML,JKGILHM,JKGILMH,JKGIMHL,JKGIMLH,JKGLHIM,JKGLHMI,JKGLIHM," +
"JKGLIMH,JKGLMHI,JKGLMIH,JKGMHIL,JKGMHLI,JKGMIHL,JKGMILH,JKGMLHI,JKGMLIH,JKHGILM,JKHGIML,JKHGLIM,JKHGLMI,JKHGMIL,JKHGMLI," +
"JKHIGLM,JKHIGML,JKHILGM,JKHILMG,JKHIMGL,JKHIMLG,JKHLGIM,JKHLGMI,JKHLIGM,JKHLIMG,JKHLMGI,JKHLMIG,JKHMGIL,JKHMGLI,JKHMIGL," +
"JKHMILG,JKHMLGI,JKHMLIG,JKIGHLM,JKIGHML,JKIGLHM,JKIGLMH,JKIGMHL,JKIGMLH,JKIHGLM,JKIHGML,JKIHLGM,JKIHLMG,JKIHMGL,JKIHMLG," +
"JKILGHM,JKILGMH,JKILHGM,JKILHMG,JKILMGH,JKILMHG,JKIMGHL,JKIMGLH,JKIMHGL,JKIMHLG,JKIMLGH,JKIMLHG,JKLGHIM,JKLGHMI,JKLGIHM," +
"JKLGIMH,JKLGMHI,JKLGMIH,JKLHGIM,JKLHGMI,JKLHIGM,JKLHIMG,JKLHMGI,JKLHMIG,JKLIGHM,JKLIGMH,JKLIHGM,JKLIHMG,JKLIMGH,JKLIMHG," +
"JKLMGHI,JKLMGIH,JKLMHGI,JKLMHIG,JKLMIGH,JKLMIHG,JKMGHIL,JKMGHLI,JKMGIHL,JKMGILH,JKMGLHI,JKMGLIH,JKMHGIL,JKMHGLI,JKMHIGL," +
"JKMHILG,JKMHLGI,JKMHLIG,JKMIGHL,JKMIGLH,JKMIHGL,JKMIHLG,JKMILGH,JKMILHG,JKMLGHI,JKMLGIH,JKMLHGI,JKMLHIG,JKMLIGH,JKMLIHG," +
"JLGHIKM,JLGHIMK,JLGHKIM,JLGHKMI,JLGHMIK,JLGHMKI,JLGIHKM,JLGIHMK,JLGIKHM,JLGIKMH,JLGIMHK,JLGIMKH,JLGKHIM,JLGKHMI,JLGKIHM," +
"JLGKIMH,JLGKMHI,JLGKMIH,JLGMHIK,JLGMHKI,JLGMIHK,JLGMIKH,JLGMKHI,JLGMKIH,JLHGIKM,JLHGIMK,JLHGKIM,JLHGKMI,JLHGMIK,JLHGMKI," +
"JLHIGKM,JLHIGMK,JLHIKGM,JLHIKMG,JLHIMGK,JLHIMKG,JLHKGIM,JLHKGMI,JLHKIGM,JLHKIMG,JLHKMGI,JLHKMIG,JLHMGIK,JLHMGKI,JLHMIGK," +
"JLHMIKG,JLHMKGI,JLHMKIG,JLIGHKM,JLIGHMK,JLIGKHM,JLIGKMH,JLIGMHK,JLIGMKH,JLIHGKM,JLIHGMK,JLIHKGM,JLIHKMG,JLIHMGK,JLIHMKG," +
"JLIKGHM,JLIKGMH,JLIKHGM,JLIKHMG,JLIKMGH,JLIKMHG,JLIMGHK,JLIMGKH,JLIMHGK,JLIMHKG,JLIMKGH,JLIMKHG,JLKGHIM,JLKGHMI,JLKGIHM," +
"JLKGIMH,JLKGMHI,JLKGMIH,JLKHGIM,JLKHGMI,JLKHIGM,JLKHIMG,JLKHMGI,JLKHMIG,JLKIGHM,JLKIGMH,JLKIHGM,JLKIHMG,JLKIMGH,JLKIMHG," +
"JLKMGHI,JLKMGIH,JLKMHGI,JLKMHIG,JLKMIGH,JLKMIHG,JLMGHIK,JLMGHKI,JLMGIHK,JLMGIKH,JLMGKHI,JLMGKIH,JLMHGIK,JLMHGKI,JLMHIGK," +
"JLMHIKG,JLMHKGI,JLMHKIG,JLMIGHK,JLMIGKH,JLMIHGK,JLMIHKG,JLMIKGH,JLMIKHG,JLMKGHI,JLMKGIH,JLMKHGI,JLMKHIG,JLMKIGH,JLMKIHG," +
"JMGHIKL,JMGHILK,JMGHKIL,JMGHKLI,JMGHLIK,JMGHLKI,JMGIHKL,JMGIHLK,JMGIKHL,JMGIKLH,JMGILHK,JMGILKH,JMGKHIL,JMGKHLI,JMGKIHL," +
"JMGKILH,JMGKLHI,JMGKLIH,JMGLHIK,JMGLHKI,JMGLIHK,JMGLIKH,JMGLKHI,JMGLKIH,JMHGIKL,JMHGILK,JMHGKIL,JMHGKLI,JMHGLIK,JMHGLKI," +
"JMHIGKL,JMHIGLK,JMHIKGL,JMHIKLG,JMHILGK,JMHILKG,JMHKGIL,JMHKGLI,JMHKIGL,JMHKILG,JMHKLGI,JMHKLIG,JMHLGIK,JMHLGKI,JMHLIGK," +
"JMHLIKG,JMHLKGI,JMHLKIG,JMIGHKL,JMIGHLK,JMIGKHL,JMIGKLH,JMIGLHK,JMIGLKH,JMIHGKL,JMIHGLK,JMIHKGL,JMIHKLG,JMIHLGK,JMIHLKG," +
"JMIKGHL,JMIKGLH,JMIKHGL,JMIKHLG,JMIKLGH,JMIKLHG,JMILGHK,JMILGKH,JMILHGK,JMILHKG,JMILKGH,JMILKHG,JMKGHIL,JMKGHLI,JMKGIHL," +
"JMKGILH,JMKGLHI,JMKGLIH,JMKHGIL,JMKHGLI,JMKHIGL,JMKHILG,JMKHLGI,JMKHLIG,JMKIGHL,JMKIGLH,JMKIHGL,JMKIHLG,JMKILGH,JMKILHG," +
"JMKLGHI,JMKLGIH,JMKLHGI,JMKLHIG,JMKLIGH,JMKLIHG,JMLGHIK,JMLGHKI,JMLGIHK,JMLGIKH,JMLGKHI,JMLGKIH,JMLHGIK,JMLHGKI,JMLHIGK," +
"JMLHIKG,JMLHKGI,JMLHKIG,JMLIGHK,JMLIGKH,JMLIHGK,JMLIHKG,JMLIKGH,JMLIKHG,JMLKGHI,JMLKGIH,JMLKHGI,JMLKHIG,JMLKIGH,JMLKIHG," +
"KGHIJLM,KGHIJML,KGHILJM,KGHILMJ,KGHIMJL,KGHIMLJ,KGHJILM,KGHJIML,KGHJLIM,KGHJLMI,KGHJMIL,KGHJMLI,KGHLIJM,KGHLIMJ,KGHLJIM," +
"KGHLJMI,KGHLMIJ,KGHLMJI,KGHMIJL,KGHMILJ,KGHMJIL,KGHMJLI,KGHMLIJ,KGHMLJI,KGIHJLM,KGIHJML,KGIHLJM,KGIHLMJ,KGIHMJL,KGIHMLJ," +
"KGIJHLM,KGIJHML,KGIJLHM,KGIJLMH,KGIJMHL,KGIJMLH,KGILHJM,KGILHMJ,KGILJHM,KGILJMH,KGILMHJ,KGILMJH,KGIMHJL,KGIMHLJ,KGIMJHL," +
"KGIMJLH,KGIMLHJ,KGIMLJH,KGJHILM,KGJHIML,KGJHLIM,KGJHLMI,KGJHMIL,KGJHMLI,KGJIHLM,KGJIHML,KGJILHM,KGJILMH,KGJIMHL,KGJIMLH," +
"KGJLHIM,KGJLHMI,KGJLIHM,KGJLIMH,KGJLMHI,KGJLMIH,KGJMHIL,KGJMHLI,KGJMIHL,KGJMILH,KGJMLHI,KGJMLIH,KGLHIJM,KGLHIMJ,KGLHJIM," +
"KGLHJMI,KGLHMIJ,KGLHMJI,KGLIHJM,KGLIHMJ,KGLIJHM,KGLIJMH,KGLIMHJ,KGLIMJH,KGLJHIM,KGLJHMI,KGLJIHM,KGLJIMH,KGLJMHI,KGLJMIH," +
"KGLMHIJ,KGLMHJI,KGLMIHJ,KGLMIJH,KGLMJHI,KGLMJIH,KGMHIJL,KGMHILJ,KGMHJIL,KGMHJLI,KGMHLIJ,KGMHLJI,KGMIHJL,KGMIHLJ,KGMIJHL," +
"KGMIJLH,KGMILHJ,KGMILJH,KGMJHIL,KGMJHLI,KGMJIHL,KGMJILH,KGMJLHI,KGMJLIH,KGMLHIJ,KGMLHJI,KGMLIHJ,KGMLIJH,KGMLJHI,KGMLJIH," +
"KHGIJLM,KHGIJML,KHGILJM,KHGILMJ,KHGIMJL,KHGIMLJ,KHGJILM,KHGJIML,KHGJLIM,KHGJLMI,KHGJMIL,KHGJMLI,KHGLIJM,KHGLIMJ,KHGLJIM," +
"KHGLJMI,KHGLMIJ,KHGLMJI,KHGMIJL,KHGMILJ,KHGMJIL,KHGMJLI,KHGMLIJ,KHGMLJI,KHIGJLM,KHIGJML,KHIGLJM,KHIGLMJ,KHIGMJL,KHIGMLJ," +
"KHIJGLM,KHIJGML,KHIJLGM,KHIJLMG,KHIJMGL,KHIJMLG,KHILGJM,KHILGMJ,KHILJGM,KHILJMG,KHILMGJ,KHILMJG,KHIMGJL,KHIMGLJ,KHIMJGL," +
"KHIMJLG,KHIMLGJ,KHIMLJG,KHJGILM,KHJGIML,KHJGLIM,KHJGLMI,KHJGMIL,KHJGMLI,KHJIGLM,KHJIGML,KHJILGM,KHJILMG,KHJIMGL,KHJIMLG," +
"KHJLGIM,KHJLGMI,KHJLIGM,KHJLIMG,KHJLMGI,KHJLMIG,KHJMGIL,KHJMGLI,KHJMIGL,KHJMILG,KHJMLGI,KHJMLIG,KHLGIJM,KHLGIMJ,KHLGJIM," +
"KHLGJMI,KHLGMIJ,KHLGMJI,KHLIGJM,KHLIGMJ,KHLIJGM,KHLIJMG,KHLIMGJ,KHLIMJG,KHLJGIM,KHLJGMI,KHLJIGM,KHLJIMG,KHLJMGI,KHLJMIG," +
"KHLMGIJ,KHLMGJI,KHLMIGJ,KHLMIJG,KHLMJGI,KHLMJIG,KHMGIJL,KHMGILJ,KHMGJIL,KHMGJLI,KHMGLIJ,KHMGLJI,KHMIGJL,KHMIGLJ,KHMIJGL," +
"KHMIJLG,KHMILGJ,KHMILJG,KHMJGIL,KHMJGLI,KHMJIGL,KHMJILG,KHMJLGI,KHMJLIG,KHMLGIJ,KHMLGJI,KHMLIGJ,KHMLIJG,KHMLJGI,KHMLJIG," +
"KIGHJLM,KIGHJML,KIGHLJM,KIGHLMJ,KIGHMJL,KIGHMLJ,KIGJHLM,KIGJHML,KIGJLHM,KIGJLMH,KIGJMHL,KIGJMLH,KIGLHJM,KIGLHMJ,KIGLJHM," +
"KIGLJMH,KIGLMHJ,KIGLMJH,KIGMHJL,KIGMHLJ,KIGMJHL,KIGMJLH,KIGMLHJ,KIGMLJH,KIHGJLM,KIHGJML,KIHGLJM,KIHGLMJ,KIHGMJL,KIHGMLJ," +
"KIHJGLM,KIHJGML,KIHJLGM,KIHJLMG,KIHJMGL,KIHJMLG,KIHLGJM,KIHLGMJ,KIHLJGM,KIHLJMG,KIHLMGJ,KIHLMJG,KIHMGJL,KIHMGLJ,KIHMJGL," +
"KIHMJLG,KIHMLGJ,KIHMLJG,KIJGHLM,KIJGHML,KIJGLHM,KIJGLMH,KIJGMHL,KIJGMLH,KIJHGLM,KIJHGML,KIJHLGM,KIJHLMG,KIJHMGL,KIJHMLG," +
"KIJLGHM,KIJLGMH,KIJLHGM,KIJLHMG,KIJLMGH,KIJLMHG,KIJMGHL,KIJMGLH,KIJMHGL,KIJMHLG,KIJMLGH,KIJMLHG,KILGHJM,KILGHMJ,KILGJHM," +
"KILGJMH,KILGMHJ,KILGMJH,KILHGJM,KILHGMJ,KILHJGM,KILHJMG,KILHMGJ,KILHMJG,KILJGHM,KILJGMH,KILJHGM,KILJHMG,KILJMGH,KILJMHG," +
"KILMGHJ,KILMGJH,KILMHGJ,KILMHJG,KILMJGH,KILMJHG,KIMGHJL,KIMGHLJ,KIMGJHL,KIMGJLH,KIMGLHJ,KIMGLJH,KIMHGJL,KIMHGLJ,KIMHJGL," +
"KIMHJLG,KIMHLGJ,KIMHLJG,KIMJGHL,KIMJGLH,KIMJHGL,KIMJHLG,KIMJLGH,KIMJLHG,KIMLGHJ,KIMLGJH,KIMLHGJ,KIMLHJG,KIMLJGH,KIMLJHG," +
"KJGHILM,KJGHIML,KJGHLIM,KJGHLMI,KJGHMIL,KJGHMLI,KJGIHLM,KJGIHML,KJGILHM,KJGILMH,KJGIMHL,KJGIMLH,KJGLHIM,KJGLHMI,KJGLIHM," +
"KJGLIMH,KJGLMHI,KJGLMIH,KJGMHIL,KJGMHLI,KJGMIHL,KJGMILH,KJGMLHI,KJGMLIH,KJHGILM,KJHGIML,KJHGLIM,KJHGLMI,KJHGMIL,KJHGMLI," +
"KJHIGLM,KJHIGML,KJHILGM,KJHILMG,KJHIMGL,KJHIMLG,KJHLGIM,KJHLGMI,KJHLIGM,KJHLIMG,KJHLMGI,KJHLMIG,KJHMGIL,KJHMGLI,KJHMIGL," +
"KJHMILG,KJHMLGI,KJHMLIG,KJIGHLM,KJIGHML,KJIGLHM,KJIGLMH,KJIGMHL,KJIGMLH,KJIHGLM,KJIHGML,KJIHLGM,KJIHLMG,KJIHMGL,KJIHMLG," +
"KJILGHM,KJILGMH,KJILHGM,KJILHMG,KJILMGH,KJILMHG,KJIMGHL,KJIMGLH,KJIMHGL,KJIMHLG,KJIMLGH,KJIMLHG,KJLGHIM,KJLGHMI,KJLGIHM," +
"KJLGIMH,KJLGMHI,KJLGMIH,KJLHGIM,KJLHGMI,KJLHIGM,KJLHIMG,KJLHMGI,KJLHMIG,KJLIGHM,KJLIGMH,KJLIHGM,KJLIHMG,KJLIMGH,KJLIMHG," +
"KJLMGHI,KJLMGIH,KJLMHGI,KJLMHIG,KJLMIGH,KJLMIHG,KJMGHIL,KJMGHLI,KJMGIHL,KJMGILH,KJMGLHI,KJMGLIH,KJMHGIL,KJMHGLI,KJMHIGL," +
"KJMHILG,KJMHLGI,KJMHLIG,KJMIGHL,KJMIGLH,KJMIHGL,KJMIHLG,KJMILGH,KJMILHG,KJMLGHI,KJMLGIH,KJMLHGI,KJMLHIG,KJMLIGH,KJMLIHG," +
"KLGHIJM,KLGHIMJ,KLGHJIM,KLGHJMI,KLGHMIJ,KLGHMJI,KLGIHJM,KLGIHMJ,KLGIJHM,KLGIJMH,KLGIMHJ,KLGIMJH,KLGJHIM,KLGJHMI,KLGJIHM," +
"KLGJIMH,KLGJMHI,KLGJMIH,KLGMHIJ,KLGMHJI,KLGMIHJ,KLGMIJH,KLGMJHI,KLGMJIH,KLHGIJM,KLHGIMJ,KLHGJIM,KLHGJMI,KLHGMIJ,KLHGMJI," +
"KLHIGJM,KLHIGMJ,KLHIJGM,KLHIJMG,KLHIMGJ,KLHIMJG,KLHJGIM,KLHJGMI,KLHJIGM,KLHJIMG,KLHJMGI,KLHJMIG,KLHMGIJ,KLHMGJI,KLHMIGJ," +
"KLHMIJG,KLHMJGI,KLHMJIG,KLIGHJM,KLIGHMJ,KLIGJHM,KLIGJMH,KLIGMHJ,KLIGMJH,KLIHGJM,KLIHGMJ,KLIHJGM,KLIHJMG,KLIHMGJ,KLIHMJG," +
"KLIJGHM,KLIJGMH,KLIJHGM,KLIJHMG,KLIJMGH,KLIJMHG,KLIMGHJ,KLIMGJH,KLIMHGJ,KLIMHJG,KLIMJGH,KLIMJHG,KLJGHIM,KLJGHMI,KLJGIHM," +
"KLJGIMH,KLJGMHI,KLJGMIH,KLJHGIM,KLJHGMI,KLJHIGM,KLJHIMG,KLJHMGI,KLJHMIG,KLJIGHM,KLJIGMH,KLJIHGM,KLJIHMG,KLJIMGH,KLJIMHG," +
"KLJMGHI,KLJMGIH,KLJMHGI,KLJMHIG,KLJMIGH,KLJMIHG,KLMGHIJ,KLMGHJI,KLMGIHJ,KLMGIJH,KLMGJHI,KLMGJIH,KLMHGIJ,KLMHGJI,KLMHIGJ," +
"KLMHIJG,KLMHJGI,KLMHJIG,KLMIGHJ,KLMIGJH,KLMIHGJ,KLMIHJG,KLMIJGH,KLMIJHG,KLMJGHI,KLMJGIH,KLMJHGI,KLMJHIG,KLMJIGH,KLMJIHG," +
"KMGHIJL,KMGHILJ,KMGHJIL,KMGHJLI,KMGHLIJ,KMGHLJI,KMGIHJL,KMGIHLJ,KMGIJHL,KMGIJLH,KMGILHJ,KMGILJH,KMGJHIL,KMGJHLI,KMGJIHL," +
"KMGJILH,KMGJLHI,KMGJLIH,KMGLHIJ,KMGLHJI,KMGLIHJ,KMGLIJH,KMGLJHI,KMGLJIH,KMHGIJL,KMHGILJ,KMHGJIL,KMHGJLI,KMHGLIJ,KMHGLJI," +
"KMHIGJL,KMHIGLJ,KMHIJGL,KMHIJLG,KMHILGJ,KMHILJG,KMHJGIL,KMHJGLI,KMHJIGL,KMHJILG,KMHJLGI,KMHJLIG,KMHLGIJ,KMHLGJI,KMHLIGJ," +
"KMHLIJG,KMHLJGI,KMHLJIG,KMIGHJL,KMIGHLJ,KMIGJHL,KMIGJLH,KMIGLHJ,KMIGLJH,KMIHGJL,KMIHGLJ,KMIHJGL,KMIHJLG,KMIHLGJ,KMIHLJG," +
"KMIJGHL,KMIJGLH,KMIJHGL,KMIJHLG,KMIJLGH,KMIJLHG,KMILGHJ,KMILGJH,KMILHGJ,KMILHJG,KMILJGH,KMILJHG,KMJGHIL,KMJGHLI,KMJGIHL," +
"KMJGILH,KMJGLHI,KMJGLIH,KMJHGIL,KMJHGLI,KMJHIGL,KMJHILG,KMJHLGI,KMJHLIG,KMJIGHL,KMJIGLH,KMJIHGL,KMJIHLG,KMJILGH,KMJILHG," +
"KMJLGHI,KMJLGIH,KMJLHGI,KMJLHIG,KMJLIGH,KMJLIHG,KMLGHIJ,KMLGHJI,KMLGIHJ,KMLGIJH,KMLGJHI,KMLGJIH,KMLHGIJ,KMLHGJI,KMLHIGJ," +
"KMLHIJG,KMLHJGI,KMLHJIG,KMLIGHJ,KMLIGJH,KMLIHGJ,KMLIHJG,KMLIJGH,KMLIJHG,KMLJGHI,KMLJGIH,KMLJHGI,KMLJHIG,KMLJIGH,KMLJIHG," +
"LGHIJKM,LGHIJMK,LGHIKJM,LGHIKMJ,LGHIMJK,LGHIMKJ,LGHJIKM,LGHJIMK,LGHJKIM,LGHJKMI,LGHJMIK,LGHJMKI,LGHKIJM,LGHKIMJ,LGHKJIM," +
"LGHKJMI,LGHKMIJ,LGHKMJI,LGHMIJK,LGHMIKJ,LGHMJIK,LGHMJKI,LGHMKIJ,LGHMKJI,LGIHJKM,LGIHJMK,LGIHKJM,LGIHKMJ,LGIHMJK,LGIHMKJ," +
"LGIJHKM,LGIJHMK,LGIJKHM,LGIJKMH,LGIJMHK,LGIJMKH,LGIKHJM,LGIKHMJ,LGIKJHM,LGIKJMH,LGIKMHJ,LGIKMJH,LGIMHJK,LGIMHKJ,LGIMJHK," +
"LGIMJKH,LGIMKHJ,LGIMKJH,LGJHIKM,LGJHIMK,LGJHKIM,LGJHKMI,LGJHMIK,LGJHMKI,LGJIHKM,LGJIHMK,LGJIKHM,LGJIKMH,LGJIMHK,LGJIMKH," +
"LGJKHIM,LGJKHMI,LGJKIHM,LGJKIMH,LGJKMHI,LGJKMIH,LGJMHIK,LGJMHKI,LGJMIHK,LGJMIKH,LGJMKHI,LGJMKIH,LGKHIJM,LGKHIMJ,LGKHJIM," +
"LGKHJMI,LGKHMIJ,LGKHMJI,LGKIHJM,LGKIHMJ,LGKIJHM,LGKIJMH,LGKIMHJ,LGKIMJH,LGKJHIM,LGKJHMI,LGKJIHM,LGKJIMH,LGKJMHI,LGKJMIH," +
"LGKMHIJ,LGKMHJI,LGKMIHJ,LGKMIJH,LGKMJHI,LGKMJIH,LGMHIJK,LGMHIKJ,LGMHJIK,LGMHJKI,LGMHKIJ,LGMHKJI,LGMIHJK,LGMIHKJ,LGMIJHK," +
"LGMIJKH,LGMIKHJ,LGMIKJH,LGMJHIK,LGMJHKI,LGMJIHK,LGMJIKH,LGMJKHI,LGMJKIH,LGMKHIJ,LGMKHJI,LGMKIHJ,LGMKIJH,LGMKJHI,LGMKJIH," +
"LHGIJKM,LHGIJMK,LHGIKJM,LHGIKMJ,LHGIMJK,LHGIMKJ,LHGJIKM,LHGJIMK,LHGJKIM,LHGJKMI,LHGJMIK,LHGJMKI,LHGKIJM,LHGKIMJ,LHGKJIM," +
"LHGKJMI,LHGKMIJ,LHGKMJI,LHGMIJK,LHGMIKJ,LHGMJIK,LHGMJKI,LHGMKIJ,LHGMKJI,LHIGJKM,LHIGJMK,LHIGKJM,LHIGKMJ,LHIGMJK,LHIGMKJ," +
"LHIJGKM,LHIJGMK,LHIJKGM,LHIJKMG,LHIJMGK,LHIJMKG,LHIKGJM,LHIKGMJ,LHIKJGM,LHIKJMG,LHIKMGJ,LHIKMJG,LHIMGJK,LHIMGKJ,LHIMJGK," +
"LHIMJKG,LHIMKGJ,LHIMKJG,LHJGIKM,LHJGIMK,LHJGKIM,LHJGKMI,LHJGMIK,LHJGMKI,LHJIGKM,LHJIGMK,LHJIKGM,LHJIKMG,LHJIMGK,LHJIMKG," +
"LHJKGIM,LHJKGMI,LHJKIGM,LHJKIMG,LHJKMGI,LHJKMIG,LHJMGIK,LHJMGKI,LHJMIGK,LHJMIKG,LHJMKGI,LHJMKIG,LHKGIJM,LHKGIMJ,LHKGJIM," +
"LHKGJMI,LHKGMIJ,LHKGMJI,LHKIGJM,LHKIGMJ,LHKIJGM,LHKIJMG,LHKIMGJ,LHKIMJG,LHKJGIM,LHKJGMI,LHKJIGM,LHKJIMG,LHKJMGI,LHKJMIG," +
"LHKMGIJ,LHKMGJI,LHKMIGJ,LHKMIJG,LHKMJGI,LHKMJIG,LHMGIJK,LHMGIKJ,LHMGJIK,LHMGJKI,LHMGKIJ,LHMGKJI,LHMIGJK,LHMIGKJ,LHMIJGK," +
"LHMIJKG,LHMIKGJ,LHMIKJG,LHMJGIK,LHMJGKI,LHMJIGK,LHMJIKG,LHMJKGI,LHMJKIG,LHMKGIJ,LHMKGJI,LHMKIGJ,LHMKIJG,LHMKJGI,LHMKJIG," +
"LIGHJKM,LIGHJMK,LIGHKJM,LIGHKMJ,LIGHMJK,LIGHMKJ,LIGJHKM,LIGJHMK,LIGJKHM,LIGJKMH,LIGJMHK,LIGJMKH,LIGKHJM,LIGKHMJ,LIGKJHM," +
"LIGKJMH,LIGKMHJ,LIGKMJH,LIGMHJK,LIGMHKJ,LIGMJHK,LIGMJKH,LIGMKHJ,LIGMKJH,LIHGJKM,LIHGJMK,LIHGKJM,LIHGKMJ,LIHGMJK,LIHGMKJ," +
"LIHJGKM,LIHJGMK,LIHJKGM,LIHJKMG,LIHJMGK,LIHJMKG,LIHKGJM,LIHKGMJ,LIHKJGM,LIHKJMG,LIHKMGJ,LIHKMJG,LIHMGJK,LIHMGKJ,LIHMJGK," +
"LIHMJKG,LIHMKGJ,LIHMKJG,LIJGHKM,LIJGHMK,LIJGKHM,LIJGKMH,LIJGMHK,LIJGMKH,LIJHGKM,LIJHGMK,LIJHKGM,LIJHKMG,LIJHMGK,LIJHMKG," +
"LIJKGHM,LIJKGMH,LIJKHGM,LIJKHMG,LIJKMGH,LIJKMHG,LIJMGHK,LIJMGKH,LIJMHGK,LIJMHKG,LIJMKGH,LIJMKHG,LIKGHJM,LIKGHMJ,LIKGJHM," +
"LIKGJMH,LIKGMHJ,LIKGMJH,LIKHGJM,LIKHGMJ,LIKHJGM,LIKHJMG,LIKHMGJ,LIKHMJG,LIKJGHM,LIKJGMH,LIKJHGM,LIKJHMG,LIKJMGH,LIKJMHG," +
"LIKMGHJ,LIKMGJH,LIKMHGJ,LIKMHJG,LIKMJGH,LIKMJHG,LIMGHJK,LIMGHKJ,LIMGJHK,LIMGJKH,LIMGKHJ,LIMGKJH,LIMHGJK,LIMHGKJ,LIMHJGK," +
"LIMHJKG,LIMHKGJ,LIMHKJG,LIMJGHK,LIMJGKH,LIMJHGK,LIMJHKG,LIMJKGH,LIMJKHG,LIMKGHJ,LIMKGJH,LIMKHGJ,LIMKHJG,LIMKJGH,LIMKJHG," +
"LJGHIKM,LJGHIMK,LJGHKIM,LJGHKMI,LJGHMIK,LJGHMKI,LJGIHKM,LJGIHMK,LJGIKHM,LJGIKMH,LJGIMHK,LJGIMKH,LJGKHIM,LJGKHMI,LJGKIHM," +
"LJGKIMH,LJGKMHI,LJGKMIH,LJGMHIK,LJGMHKI,LJGMIHK,LJGMIKH,LJGMKHI,LJGMKIH,LJHGIKM,LJHGIMK,LJHGKIM,LJHGKMI,LJHGMIK,LJHGMKI," +
"LJHIGKM,LJHIGMK,LJHIKGM,LJHIKMG,LJHIMGK,LJHIMKG,LJHKGIM,LJHKGMI,LJHKIGM,LJHKIMG,LJHKMGI,LJHKMIG,LJHMGIK,LJHMGKI,LJHMIGK," +
"LJHMIKG,LJHMKGI,LJHMKIG,LJIGHKM,LJIGHMK,LJIGKHM,LJIGKMH,LJIGMHK,LJIGMKH,LJIHGKM,LJIHGMK,LJIHKGM,LJIHKMG,LJIHMGK,LJIHMKG," +
"LJIKGHM,LJIKGMH,LJIKHGM,LJIKHMG,LJIKMGH,LJIKMHG,LJIMGHK,LJIMGKH,LJIMHGK,LJIMHKG,LJIMKGH,LJIMKHG,LJKGHIM,LJKGHMI,LJKGIHM," +
"LJKGIMH,LJKGMHI,LJKGMIH,LJKHGIM,LJKHGMI,LJKHIGM,LJKHIMG,LJKHMGI,LJKHMIG,LJKIGHM,LJKIGMH,LJKIHGM,LJKIHMG,LJKIMGH,LJKIMHG," +
"LJKMGHI,LJKMGIH,LJKMHGI,LJKMHIG,LJKMIGH,LJKMIHG,LJMGHIK,LJMGHKI,LJMGIHK,LJMGIKH,LJMGKHI,LJMGKIH,LJMHGIK,LJMHGKI,LJMHIGK," +
"LJMHIKG,LJMHKGI,LJMHKIG,LJMIGHK,LJMIGKH,LJMIHGK,LJMIHKG,LJMIKGH,LJMIKHG,LJMKGHI,LJMKGIH,LJMKHGI,LJMKHIG,LJMKIGH,LJMKIHG," +
"LKGHIJM,LKGHIMJ,LKGHJIM,LKGHJMI,LKGHMIJ,LKGHMJI,LKGIHJM,LKGIHMJ,LKGIJHM,LKGIJMH,LKGIMHJ,LKGIMJH,LKGJHIM,LKGJHMI,LKGJIHM," +
"LKGJIMH,LKGJMHI,LKGJMIH,LKGMHIJ,LKGMHJI,LKGMIHJ,LKGMIJH,LKGMJHI,LKGMJIH,LKHGIJM,LKHGIMJ,LKHGJIM,LKHGJMI,LKHGMIJ,LKHGMJI," +
"LKHIGJM,LKHIGMJ,LKHIJGM,LKHIJMG,LKHIMGJ,LKHIMJG,LKHJGIM,LKHJGMI,LKHJIGM,LKHJIMG,LKHJMGI,LKHJMIG,LKHMGIJ,LKHMGJI,LKHMIGJ," +
"LKHMIJG,LKHMJGI,LKHMJIG,LKIGHJM,LKIGHMJ,LKIGJHM,LKIGJMH,LKIGMHJ,LKIGMJH,LKIHGJM,LKIHGMJ,LKIHJGM,LKIHJMG,LKIHMGJ,LKIHMJG," +
"LKIJGHM,LKIJGMH,LKIJHGM,LKIJHMG,LKIJMGH,LKIJMHG,LKIMGHJ,LKIMGJH,LKIMHGJ,LKIMHJG,LKIMJGH,LKIMJHG,LKJGHIM,LKJGHMI,LKJGIHM," +
"LKJGIMH,LKJGMHI,LKJGMIH,LKJHGIM,LKJHGMI,LKJHIGM,LKJHIMG,LKJHMGI,LKJHMIG,LKJIGHM,LKJIGMH,LKJIHGM,LKJIHMG,LKJIMGH,LKJIMHG," +
"LKJMGHI,LKJMGIH,LKJMHGI,LKJMHIG,LKJMIGH,LKJMIHG,LKMGHIJ,LKMGHJI,LKMGIHJ,LKMGIJH,LKMGJHI,LKMGJIH,LKMHGIJ,LKMHGJI,LKMHIGJ," +
"LKMHIJG,LKMHJGI,LKMHJIG,LKMIGHJ,LKMIGJH,LKMIHGJ,LKMIHJG,LKMIJGH,LKMIJHG,LKMJGHI,LKMJGIH,LKMJHGI,LKMJHIG,LKMJIGH,LKMJIHG," +
"LMGHIJK,LMGHIKJ,LMGHJIK,LMGHJKI,LMGHKIJ,LMGHKJI,LMGIHJK,LMGIHKJ,LMGIJHK,LMGIJKH,LMGIKHJ,LMGIKJH,LMGJHIK,LMGJHKI,LMGJIHK," +
"LMGJIKH,LMGJKHI,LMGJKIH,LMGKHIJ,LMGKHJI,LMGKIHJ,LMGKIJH,LMGKJHI,LMGKJIH,LMHGIJK,LMHGIKJ,LMHGJIK,LMHGJKI,LMHGKIJ,LMHGKJI," +
"LMHIGJK,LMHIGKJ,LMHIJGK,LMHIJKG,LMHIKGJ,LMHIKJG,LMHJGIK,LMHJGKI,LMHJIGK,LMHJIKG,LMHJKGI,LMHJKIG,LMHKGIJ,LMHKGJI,LMHKIGJ," +
"LMHKIJG,LMHKJGI,LMHKJIG,LMIGHJK,LMIGHKJ,LMIGJHK,LMIGJKH,LMIGKHJ,LMIGKJH,LMIHGJK,LMIHGKJ,LMIHJGK,LMIHJKG,LMIHKGJ,LMIHKJG," +
"LMIJGHK,LMIJGKH,LMIJHGK,LMIJHKG,LMIJKGH,LMIJKHG,LMIKGHJ,LMIKGJH,LMIKHGJ,LMIKHJG,LMIKJGH,LMIKJHG,LMJGHIK,LMJGHKI,LMJGIHK," +
"LMJGIKH,LMJGKHI,LMJGKIH,LMJHGIK,LMJHGKI,LMJHIGK,LMJHIKG,LMJHKGI,LMJHKIG,LMJIGHK,LMJIGKH,LMJIHGK,LMJIHKG,LMJIKGH,LMJIKHG," +
"LMJKGHI,LMJKGIH,LMJKHGI,LMJKHIG,LMJKIGH,LMJKIHG,LMKGHIJ,LMKGHJI,LMKGIHJ,LMKGIJH,LMKGJHI,LMKGJIH,LMKHGIJ,LMKHGJI,LMKHIGJ," +
"LMKHIJG,LMKHJGI,LMKHJIG,LMKIGHJ,LMKIGJH,LMKIHGJ,LMKIHJG,LMKIJGH,LMKIJHG,LMKJGHI,LMKJGIH,LMKJHGI,LMKJHIG,LMKJIGH,LMKJIHG," +
"MGHIJKL,MGHIJLK,MGHIKJL,MGHIKLJ,MGHILJK,MGHILKJ,MGHJIKL,MGHJILK,MGHJKIL,MGHJKLI,MGHJLIK,MGHJLKI,MGHKIJL,MGHKILJ,MGHKJIL," +
"MGHKJLI,MGHKLIJ,MGHKLJI,MGHLIJK,MGHLIKJ,MGHLJIK,MGHLJKI,MGHLKIJ,MGHLKJI,MGIHJKL,MGIHJLK,MGIHKJL,MGIHKLJ,MGIHLJK,MGIHLKJ," +
"MGIJHKL,MGIJHLK,MGIJKHL,MGIJKLH,MGIJLHK,MGIJLKH,MGIKHJL,MGIKHLJ,MGIKJHL,MGIKJLH,MGIKLHJ,MGIKLJH,MGILHJK,MGILHKJ,MGILJHK," +
"MGILJKH,MGILKHJ,MGILKJH,MGJHIKL,MGJHILK,MGJHKIL,MGJHKLI,MGJHLIK,MGJHLKI,MGJIHKL,MGJIHLK,MGJIKHL,MGJIKLH,MGJILHK,MGJILKH," +
"MGJKHIL,MGJKHLI,MGJKIHL,MGJKILH,MGJKLHI,MGJKLIH,MGJLHIK,MGJLHKI,MGJLIHK,MGJLIKH,MGJLKHI,MGJLKIH,MGKHIJL,MGKHILJ,MGKHJIL," +
"MGKHJLI,MGKHLIJ,MGKHLJI,MGKIHJL,MGKIHLJ,MGKIJHL,MGKIJLH,MGKILHJ,MGKILJH,MGKJHIL,MGKJHLI,MGKJIHL,MGKJILH,MGKJLHI,MGKJLIH," +
"MGKLHIJ,MGKLHJI,MGKLIHJ,MGKLIJH,MGKLJHI,MGKLJIH,MGLHIJK,MGLHIKJ,MGLHJIK,MGLHJKI,MGLHKIJ,MGLHKJI,MGLIHJK,MGLIHKJ,MGLIJHK," +
"MGLIJKH,MGLIKHJ,MGLIKJH,MGLJHIK,MGLJHKI,MGLJIHK,MGLJIKH,MGLJKHI,MGLJKIH,MGLKHIJ,MGLKHJI,MGLKIHJ,MGLKIJH,MGLKJHI,MGLKJIH," +
"MHGIJKL,MHGIJLK,MHGIKJL,MHGIKLJ,MHGILJK,MHGILKJ,MHGJIKL,MHGJILK,MHGJKIL,MHGJKLI,MHGJLIK,MHGJLKI,MHGKIJL,MHGKILJ,MHGKJIL," +
"MHGKJLI,MHGKLIJ,MHGKLJI,MHGLIJK,MHGLIKJ,MHGLJIK,MHGLJKI,MHGLKIJ,MHGLKJI,MHIGJKL,MHIGJLK,MHIGKJL,MHIGKLJ,MHIGLJK,MHIGLKJ," +
"MHIJGKL,MHIJGLK,MHIJKGL,MHIJKLG,MHIJLGK,MHIJLKG,MHIKGJL,MHIKGLJ,MHIKJGL,MHIKJLG,MHIKLGJ,MHIKLJG,MHILGJK,MHILGKJ,MHILJGK," +
"MHILJKG,MHILKGJ,MHILKJG,MHJGIKL,MHJGILK,MHJGKIL,MHJGKLI,MHJGLIK,MHJGLKI,MHJIGKL,MHJIGLK,MHJIKGL,MHJIKLG,MHJILGK,MHJILKG," +
"MHJKGIL,MHJKGLI,MHJKIGL,MHJKILG,MHJKLGI,MHJKLIG,MHJLGIK,MHJLGKI,MHJLIGK,MHJLIKG,MHJLKGI,MHJLKIG,MHKGIJL,MHKGILJ,MHKGJIL," +
"MHKGJLI,MHKGLIJ,MHKGLJI,MHKIGJL,MHKIGLJ,MHKIJGL,MHKIJLG,MHKILGJ,MHKILJG,MHKJGIL,MHKJGLI,MHKJIGL,MHKJILG,MHKJLGI,MHKJLIG," +
"MHKLGIJ,MHKLGJI,MHKLIGJ,MHKLIJG,MHKLJGI,MHKLJIG,MHLGIJK,MHLGIKJ,MHLGJIK,MHLGJKI,MHLGKIJ,MHLGKJI,MHLIGJK,MHLIGKJ,MHLIJGK," +
"MHLIJKG,MHLIKGJ,MHLIKJG,MHLJGIK,MHLJGKI,MHLJIGK,MHLJIKG,MHLJKGI,MHLJKIG,MHLKGIJ,MHLKGJI,MHLKIGJ,MHLKIJG,MHLKJGI,MHLKJIG," +
"MIGHJKL,MIGHJLK,MIGHKJL,MIGHKLJ,MIGHLJK,MIGHLKJ,MIGJHKL,MIGJHLK,MIGJKHL,MIGJKLH,MIGJLHK,MIGJLKH,MIGKHJL,MIGKHLJ,MIGKJHL," +
"MIGKJLH,MIGKLHJ,MIGKLJH,MIGLHJK,MIGLHKJ,MIGLJHK,MIGLJKH,MIGLKHJ,MIGLKJH,MIHGJKL,MIHGJLK,MIHGKJL,MIHGKLJ,MIHGLJK,MIHGLKJ," +
"MIHJGKL,MIHJGLK,MIHJKGL,MIHJKLG,MIHJLGK,MIHJLKG,MIHKGJL,MIHKGLJ,MIHKJGL,MIHKJLG,MIHKLGJ,MIHKLJG,MIHLGJK,MIHLGKJ,MIHLJGK," +
"MIHLJKG,MIHLKGJ,MIHLKJG,MIJGHKL,MIJGHLK,MIJGKHL,MIJGKLH,MIJGLHK,MIJGLKH,MIJHGKL,MIJHGLK,MIJHKGL,MIJHKLG,MIJHLGK,MIJHLKG," +
"MIJKGHL,MIJKGLH,MIJKHGL,MIJKHLG,MIJKLGH,MIJKLHG,MIJLGHK,MIJLGKH,MIJLHGK,MIJLHKG,MIJLKGH,MIJLKHG,MIKGHJL,MIKGHLJ,MIKGJHL," +
"MIKGJLH,MIKGLHJ,MIKGLJH,MIKHGJL,MIKHGLJ,MIKHJGL,MIKHJLG,MIKHLGJ,MIKHLJG,MIKJGHL,MIKJGLH,MIKJHGL,MIKJHLG,MIKJLGH,MIKJLHG," +
"MIKLGHJ,MIKLGJH,MIKLHGJ,MIKLHJG,MIKLJGH,MIKLJHG,MILGHJK,MILGHKJ,MILGJHK,MILGJKH,MILGKHJ,MILGKJH,MILHGJK,MILHGKJ,MILHJGK," +
"MILHJKG,MILHKGJ,MILHKJG,MILJGHK,MILJGKH,MILJHGK,MILJHKG,MILJKGH,MILJKHG,MILKGHJ,MILKGJH,MILKHGJ,MILKHJG,MILKJGH,MILKJHG," +
"MJGHIKL,MJGHILK,MJGHKIL,MJGHKLI,MJGHLIK,MJGHLKI,MJGIHKL,MJGIHLK,MJGIKHL,MJGIKLH,MJGILHK,MJGILKH,MJGKHIL,MJGKHLI,MJGKIHL," +
"MJGKILH,MJGKLHI,MJGKLIH,MJGLHIK,MJGLHKI,MJGLIHK,MJGLIKH,MJGLKHI,MJGLKIH,MJHGIKL,MJHGILK,MJHGKIL,MJHGKLI,MJHGLIK,MJHGLKI," +
"MJHIGKL,MJHIGLK,MJHIKGL,MJHIKLG,MJHILGK,MJHILKG,MJHKGIL,MJHKGLI,MJHKIGL,MJHKILG,MJHKLGI,MJHKLIG,MJHLGIK,MJHLGKI,MJHLIGK," +
"MJHLIKG,MJHLKGI,MJHLKIG,MJIGHKL,MJIGHLK,MJIGKHL,MJIGKLH,MJIGLHK,MJIGLKH,MJIHGKL,MJIHGLK,MJIHKGL,MJIHKLG,MJIHLGK,MJIHLKG," +
"MJIKGHL,MJIKGLH,MJIKHGL,MJIKHLG,MJIKLGH,MJIKLHG,MJILGHK,MJILGKH,MJILHGK,MJILHKG,MJILKGH,MJILKHG,MJKGHIL,MJKGHLI,MJKGIHL," +
"MJKGILH,MJKGLHI,MJKGLIH,MJKHGIL,MJKHGLI,MJKHIGL,MJKHILG,MJKHLGI,MJKHLIG,MJKIGHL,MJKIGLH,MJKIHGL,MJKIHLG,MJKILGH,MJKILHG," +
"MJKLGHI,MJKLGIH,MJKLHGI,MJKLHIG,MJKLIGH,MJKLIHG,MJLGHIK,MJLGHKI,MJLGIHK,MJLGIKH,MJLGKHI,MJLGKIH,MJLHGIK,MJLHGKI,MJLHIGK," +
"MJLHIKG,MJLHKGI,MJLHKIG,MJLIGHK,MJLIGKH,MJLIHGK,MJLIHKG,MJLIKGH,MJLIKHG,MJLKGHI,MJLKGIH,MJLKHGI,MJLKHIG,MJLKIGH,MJLKIHG," +
"MKGHIJL,MKGHILJ,MKGHJIL,MKGHJLI,MKGHLIJ,MKGHLJI,MKGIHJL,MKGIHLJ,MKGIJHL,MKGIJLH,MKGILHJ,MKGILJH,MKGJHIL,MKGJHLI,MKGJIHL," +
"MKGJILH,MKGJLHI,MKGJLIH,MKGLHIJ,MKGLHJI,MKGLIHJ,MKGLIJH,MKGLJHI,MKGLJIH,MKHGIJL,MKHGILJ,MKHGJIL,MKHGJLI,MKHGLIJ,MKHGLJI," +
"MKHIGJL,MKHIGLJ,MKHIJGL,MKHIJLG,MKHILGJ,MKHILJG,MKHJGIL,MKHJGLI,MKHJIGL,MKHJILG,MKHJLGI,MKHJLIG,MKHLGIJ,MKHLGJI,MKHLIGJ," +
"MKHLIJG,MKHLJGI,MKHLJIG,MKIGHJL,MKIGHLJ,MKIGJHL,MKIGJLH,MKIGLHJ,MKIGLJH,MKIHGJL,MKIHGLJ,MKIHJGL,MKIHJLG,MKIHLGJ,MKIHLJG," +
"MKIJGHL,MKIJGLH,MKIJHGL,MKIJHLG,MKIJLGH,MKIJLHG,MKILGHJ,MKILGJH,MKILHGJ,MKILHJG,MKILJGH,MKILJHG,MKJGHIL,MKJGHLI,MKJGIHL," +
"MKJGILH,MKJGLHI,MKJGLIH,MKJHGIL,MKJHGLI,MKJHIGL,MKJHILG,MKJHLGI,MKJHLIG,MKJIGHL,MKJIGLH,MKJIHGL,MKJIHLG,MKJILGH,MKJILHG," +
"MKJLGHI,MKJLGIH,MKJLHGI,MKJLHIG,MKJLIGH,MKJLIHG,MKLGHIJ,MKLGHJI,MKLGIHJ,MKLGIJH,MKLGJHI,MKLGJIH,MKLHGIJ,MKLHGJI,MKLHIGJ," +
"MKLHIJG,MKLHJGI,MKLHJIG,MKLIGHJ,MKLIGJH,MKLIHGJ,MKLIHJG,MKLIJGH,MKLIJHG,MKLJGHI,MKLJGIH,MKLJHGI,MKLJHIG,MKLJIGH,MKLJIHG," +
"MLGHIJK,MLGHIKJ,MLGHJIK,MLGHJKI,MLGHKIJ,MLGHKJI,MLGIHJK,MLGIHKJ,MLGIJHK,MLGIJKH,MLGIKHJ,MLGIKJH,MLGJHIK,MLGJHKI,MLGJIHK," +
"MLGJIKH,MLGJKHI,MLGJKIH,MLGKHIJ,MLGKHJI,MLGKIHJ,MLGKIJH,MLGKJHI,MLGKJIH,MLHGIJK,MLHGIKJ,MLHGJIK,MLHGJKI,MLHGKIJ,MLHGKJI," +
"MLHIGJK,MLHIGKJ,MLHIJGK,MLHIJKG,MLHIKGJ,MLHIKJG,MLHJGIK,MLHJGKI,MLHJIGK,MLHJIKG,MLHJKGI,MLHJKIG,MLHKGIJ,MLHKGJI,MLHKIGJ," +
"MLHKIJG,MLHKJGI,MLHKJIG,MLIGHJK,MLIGHKJ,MLIGJHK,MLIGJKH,MLIGKHJ,MLIGKJH,MLIHGJK,MLIHGKJ,MLIHJGK,MLIHJKG,MLIHKGJ,MLIHKJG," +
"MLIJGHK,MLIJGKH,MLIJHGK,MLIJHKG,MLIJKGH,MLIJKHG,MLIKGHJ,MLIKGJH,MLIKHGJ,MLIKHJG,MLIKJGH,MLIKJHG,MLJGHIK,MLJGHKI,MLJGIHK," +
"MLJGIKH,MLJGKHI,MLJGKIH,MLJHGIK,MLJHGKI,MLJHIGK,MLJHIKG,MLJHKGI,MLJHKIG,MLJIGHK,MLJIGKH,MLJIHGK,MLJIHKG,MLJIKGH,MLJIKHG," +
"MLJKGHI,MLJKGIH,MLJKHGI,MLJKHIG,MLJKIGH,MLJKIHG,MLKGHIJ,MLKGHJI,MLKGIHJ,MLKGIJH,MLKGJHI,MLKGJIH,MLKHGIJ,MLKHGJI,MLKHIGJ," +
"MLKHIJG,MLKHJGI,MLKHJIG,MLKIGHJ,MLKIGJH,MLKIHGJ,MLKIHJG,MLKIJGH,MLKIJHG,MLKJGHI,MLKJGIH,MLKJHGI,MLKJHIG,MLKJIGH,MLKJIHG";

aTableDeckB = aTableDeckB.split(",");

var aTableSuitIDcode = "25,HDSC,HDCS,HSDC,HSCD,HCDS,HCSD,DHSC,DHCS,DSHC,DSCH,DCHS,DCSH,SHDC,SHCD,SDHC,SDCH,SCHD,SCDH,CHDS,CHSD,CDHS,CDSH,CSHD,CSDH";

aTableSuitIDcode = aTableSuitIDcode.split(",");

var aTableSuitIDalpha = "25,A,B,C,D,E,F,G,H,I,J,K,L,a,b,c,d,e,f,g,h,i,j,k,l".split(",");

var aTableSuitCardCode = "13,A,B,C,D,E,F,G,H,I,J,K,L,M".split(",");

var aTableGenSuitCards = "14,0,0,0,0,0,0,0,0,0,0,0,0,0".split(",");

var aTableSuitWeight = [["C","0"],["D","13"],["H","26"],["S","39"]];

var aTable100 = [
                 ["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"], 
                 ["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"]
                 ];

var sum = function(a,b){return a+b;};

function stringSum(s) {
	var int = function(x){return parseInt(x,10);};
	return s.split('').map(int).reduce(sum);
}

function pad ( num, size ) {
	return ( Math.pow( 10, size ) + ~~num ).toString().substring( 1 );
}

function addParity(num){
	var numTemp = stringSum(stringSum(stringSum(num).toString()).toString()).toString();
	return num+(numTemp%2===1?numTemp-1:numTemp).toString();
}

function indexOf2d(arr, val) {
	var index = [-1, -1];
	if (!Array.isArray(arr)) {
		return index;
	}

	arr.some(function (sub, posX) {
		if (!Array.isArray(sub)) {
			return false;
		}

		var posY = sub.indexOf(val);

		if (posY !== -1) {
			index[0] = posX;
			index[1] = posY;
			return true;
		}

		return false;
	});

	return index;
}


function CardSwapEncode(number){
	var string1,string2,string3,string4,string5,string6;
	number = addParity(number).split("");
	string1 = indexOf2d(aTable100,number[6] + number[4]);
	string2 = indexOf2d(aTable100,number[2] + number[0]);
	string3 = indexOf2d(aTable100,number[7] + number[5]);
	string4 = indexOf2d(aTable100,number[3] + number[1]);
	string5 = string1[0].toString() + string2[0].toString() + string3[0].toString() + string4[0].toString();
	string6 = aTableAlpha[aTableBin.indexOf(string5)] + aTableAlpha[string1[1]] + aTableAlpha[string2[1]] + aTableAlpha[string3[1]] + aTableAlpha[string4[1]];
	return string6;
}

function wrap(callback) {
	callback();
}


function generateDeck(number,nDeckNo){
	var num1,num2, tempA, tempB, aSuit;
	var DeckID = CardSwapEncode(number);
	var Deck=""; //= Array.apply(null, Array(52)).map(function() { return 0 });
	num1 = parseInt(number.substr(0, 3));
	num2 = parseInt(number.substr(3, 4));
	tempA = aTableDeckA[num1].split("");
	tempB = aTableDeckB[num2].split("");
	aTableGenSuitCards = ("14,"+tempA +"," + tempB).split(",");
	DeckID = DeckID + String.fromCharCode(parseInt(nDeckNo) + 64);
	aSuit = aTableSuitIDcode[parseInt(nDeckNo)].split("");
	var j =1;
	for(var i=0;i<13;i++) {

		wrap( function(){
			Deck = Deck + (aTableSuitCardCode.indexOf(aTableGenSuitCards[j]) + parseInt(aTableSuitWeight[indexOf2d(aTableSuitWeight,aSuit[0])[0]][1])).toString() + ',';
			j++;
			if(j==14)
				j=1;

			Deck = Deck + (aTableSuitCardCode.indexOf(aTableGenSuitCards[j]) + parseInt(aTableSuitWeight[indexOf2d(aTableSuitWeight,aSuit[1])[0]][1])).toString() + ',';
			j++;
			if(j==14)
				j=1;

			Deck = Deck + (aTableSuitCardCode.indexOf(aTableGenSuitCards[j]) + parseInt(aTableSuitWeight[indexOf2d(aTableSuitWeight,aSuit[2])[0]][1])).toString() + ',';
			j++;
			if(j==14)
				j=1;

			Deck = Deck + (aTableSuitCardCode.indexOf(aTableGenSuitCards[j]) + parseInt(aTableSuitWeight[indexOf2d(aTableSuitWeight,aSuit[3])[0]][1])).toString() + ',';
			j++;
			if(j==14)
				j=1;
		}
		);
	}

	Deck = Deck.slice(0,-1).split(",");
	Deck.splice(0,0,DeckID);
	num1 = stringSum(num1.toString());
	Deck.splice(num1,0,'53');

	if (stringSum(num2.toString()) <= 22) {
		Deck.splice(25 + parseInt(stringSum(num2.toString())),0, '54');
	}
	else if (stringSum(num2.toString()) + 4 <= 35) {
		Deck.splice(3 + parseInt(stringSum(num2.toString())), 0, '54');
	}
	return Deck; 
}

function move_Joker(Deck) {
//	If JokerA is at the bottom of the pack, then put it just below the top card
	var jokerA = parseInt(Deck.indexOf("53"));

	if (jokerA === 54) {
		Deck.splice(jokerA,1);
		Deck.splice(2,0,"53")
	} else {
		Deck[jokerA] = Deck[(parseInt(jokerA) + 1)];
		Deck[jokerA + 1] = "53";//"JokerA" //swap the values
	}

	var jokerB = parseInt(Deck.indexOf("54"));
	switch (jokerB) {
	case 53:
		Deck.splice(jokerB,1);
		Deck.splice(2,0,"54");
		break;
	case 54:
		Deck.splice(jokerB,1)
		Deck.splice(3,0,"54");
		break;
	default:
		Deck[jokerB] = Deck[jokerB + 1];
	Deck[jokerB + 1] = Deck[jokerB + 2];
	Deck[jokerB + 2] = "54";
	}
	return Deck
}

function triple_cut(Deck) {
	var jokerApos=0,jokerBpos=0;
	var jokerA = parseInt(Deck.indexOf("53"));
	var jokerB = parseInt(Deck.indexOf("54"));
	var temp_Deck = [];
	var i=0;
	temp_Deck.push(Deck[0]);
	if (jokerA === 54 || jokerB === 54) {
		jokerBpos = (jokerA < jokerB) ? jokerA : jokerB;
		for (i = jokerBpos; i <= 54; i++) {
			wrap(function(){
				temp_Deck.push(Deck[i]);
			}
			);
		}
		for (i = 1 ; i< jokerBpos ;i++) {
			wrap(function(){
				temp_Deck.push(Deck[i]);
			});
		}
	}
	else {
		jokerApos = (jokerA < jokerB) ? jokerA : jokerB;
		jokerBpos = (jokerA < jokerB) ? jokerB : jokerA;
		for (i = jokerBpos + 1; i<= 54; i++) {
			wrap(function(){
				temp_Deck.push(Deck[i]);
			});
		}

		for ( i = jokerApos; i <= jokerBpos; i++) {
			wrap(function(){
				temp_Deck.push(Deck[i]);
			});
		}

		for ( i = 1 ; i < jokerApos ; i++) {
			wrap(function(){
				temp_Deck.push(Deck[i]);
			})
		}
	}
	Deck = temp_Deck;
	temp_Deck = "";
	return Deck;
}

function count_cut(Deck) {
	var temp_Deck = [];
	var last_Card = parseInt(Deck[54]);
	temp_Deck.push(Deck[0]);
	var i = 0;
	if (last_Card < 53 ) {
		for (i = last_Card + 1; i<= 53;i++){
			wrap(function(){
				temp_Deck.push(Deck[i]);		
			})
		}
		for(i = 1; i <= last_Card; i++){
			wrap(function(){
				temp_Deck.push(Deck[i]);	
			})
		}

		temp_Deck[54] = Deck[54];
		Deck = temp_Deck;
	}
	return Deck
}

function passPhrase_Shuffle(Deck, sPassPhrase){
	var temp_Deck = [];
	var nPPLen = sPassPhrase.length;
	var nPPLenCounter = 0, i = 0;
	var nCutPos = 0;
	for (nPPLenCounter = 0; nPPLenCounter < nPPLen; nPPLenCounter++){
		Deck = move_Joker(Deck);
		Deck = triple_cut(Deck);
		Deck = count_cut(Deck);
		temp_Deck[0] = Deck[0];
		nCutPos = sPassPhrase.substr(nPPLenCounter, 1).charCodeAt() - 64;
		for(i = nCutPos + 1; i<= 53; i++){
			wrap(function(){
				temp_Deck.push(Deck[i]);	
			});
		}
		for(i = 1 ; i<= nCutPos; i++){
			wrap(function(){
				temp_Deck.push(Deck[i]);	
			});
		}
		temp_Deck[54] = Deck[54];
		Deck = temp_Deck;
		temp_Deck=[];
	}
	return Deck;
}

function keyStreamGenerate(Deck, nPlainTextLen){
	var aKeyStream=[];
	var aKeyStreamAACII; 
	var nFirstCard = 0;
	var i=0;
//	Move Jokers
	for(i=1 ; i <= nPlainTextLen; i++)
	{ 
		wrap(function(){
			Deck = move_Joker(Deck);
			Deck = triple_cut(Deck);
			Deck = count_cut(Deck);
			nFirstCard = (parseInt(Deck[1]) === 54) ? 54 : parseInt(Deck[1]) + 1;
			aKeyStreamAACII = (parseInt(Deck[nFirstCard]) > 26) ? parseInt(Deck[nFirstCard]) - 26 : parseInt(Deck[nFirstCard]);
			aKeyStream.push(aKeyStreamAACII);	
		})
	}
	return aKeyStream;
}

function Solitaire_Encrypt(aKeyStream, sPlainText){
	var i = 0;
	var nSum = 0
	var sSolitaire_Chipher = "";
	var nPlainTextLen = sPlainText.length;
	sPlainText = sPlainText.split("");
	for(i = 0; i <= nPlainTextLen - 1 ; i++){
		wrap(function(){
			nSum = sPlainText[i].charCodeAt() - 64 + aKeyStream[i];
			//console.log(nSum,sPlainText[i],sPlainText[i].charCodeAt(),aKeyStream[i]);
			sSolitaire_Chipher += (nSum > 26) ? String.fromCharCode(nSum + 38) : String.fromCharCode((nSum + 64));	
		})
	}
	return sSolitaire_Chipher
}

function Solitaire_Encrypt_Cipher(passPhrase,plainText,number,nDeckNo){
	var Deck , DeckID;
	passPhrase = passPhrase.toUpperCase();
	plainText = plainText.toUpperCase();
	Deck = generateDeck(number.toString(),nDeckNo.toString());
	Deck = passPhrase_Shuffle(Deck,passPhrase);
	aKeyStream = keyStreamGenerate(Deck, plainText.length);
	sSolitaire_Chipher = Solitaire_Encrypt(aKeyStream,plainText);
	DeckID = Deck[0];
	return sSolitaire_Chipher+"-"+DeckID 
}

function checkParity(number){
	var newNumber = addParity(number.substring(0,number.length - 1)).split("");
	if (number.split("").join() === newNumber.join()) {
		return 1;
	} else {
		return -1;
	}
}

function CardSwapDecode(csString){
	var aLookup;
	var string1, string2;
	var ParityReturn;
	var number;

	if (csString.length > 5) {
		return -1;	
	}

	string1 = csString.split("");
	string1.splice(0,0,string1.length.toString());
	ParityReturn = aTableAlpha.indexOf(string1[1]);

	if (ParityReturn > 15 || ParityReturn < 0) {
		return -2;
	}
	string2 = pad(aTableBin[ParityReturn],4).split("");
	var p1 = aTable100[string2[0]][aTableAlpha.indexOf(string1[2])].split("");
	var p2 = aTable100[string2[1]][aTableAlpha.indexOf(string1[3])].split("");
	var p3 = aTable100[string2[2]][aTableAlpha.indexOf(string1[4])].split("");
	var p4 = aTable100[string2[3]][aTableAlpha.indexOf(string1[5])].split("");
	number = p2[1] + p4[1] + p2[0] + p4[0] + p1[1] + p3[1] + p1[0]
	aLookup = number + p3[0];
	//execute check parity IFF the parity is even

	if ( (parseInt(p3[0])% 2) === 1) {
		return -3;
	} else{
		var checkParityReturn = checkParity(aLookup);
	}

	if ( checkParityReturn === 1 ) {
		return number;
	} else {
		return -4
	}

}

function Solitaire_Decrypt(aKeyStream, sSolitaire_Chipher){
	var i = 0
	var nSum = 0
	var sPlainText = "";
	var nCipherTextLen = sSolitaire_Chipher.length
	sSolitaire_Chipher = sSolitaire_Chipher.split("");

	for (i = 0 ; i<= nCipherTextLen - 1;i++){
		wrap(function(){
			nSum = sSolitaire_Chipher[i].charCodeAt() - 64 - aKeyStream[i];
			sPlainText += (nSum <= 0) ? String.fromCharCode((nSum + 26) + 64) : String.fromCharCode(nSum + 64);	
		})

	}

	return sPlainText;
}

function Solitaire_Decrypt_Cipher(sSolitaire_Chipher, passPhrase){
	var csString, number, sPlainText;
	var Deck , aKeyStream;

	var encryptedString = sSolitaire_Chipher.substring(0,sSolitaire_Chipher.length - 7);
	var nDeckNo = sSolitaire_Chipher.substring(sSolitaire_Chipher.length - 1).charCodeAt() - 64;
	var DeckID = sSolitaire_Chipher.substring(sSolitaire_Chipher.length - 6,sSolitaire_Chipher.length - 1);

	number = CardSwapDecode(DeckID);

	if (number < 0 ) {
		return -1;
	}

	Deck = generateDeck(number.toString(),nDeckNo.toString());
	Deck = passPhrase_Shuffle(Deck,passPhrase.toUpperCase());
	aKeyStream = keyStreamGenerate(Deck, encryptedString.length);
	sPlainText = Solitaire_Decrypt(aKeyStream, encryptedString);

	return sPlainText;
}

function getRandomizer(bottom, top) {
	return function() {
		return Math.floor( Math.random() * ( 1 + top - bottom ) ) + bottom;
	}
}

exports.encdec = function(req, res){

	var pattern='[A-Za-z\\s]*';
	var getNumLeft = getRandomizer( 0, 720 );
	var getNumRight = getRandomizer( 0, 5040 );
	var getnDeckNo = getRandomizer( 1, 24 );

	var ranNumber = pad(getNumLeft().toString(),3)+pad(getNumRight().toString(),4);
	var ranDeckNo = pad(getnDeckNo().toString(),2);

	var content2 = req.body.passwordinput.replace(/[^a-zA-Z]+/gi, "").toUpperCase();

	if (req.body.radios === '1'){
		var content1 = req.body.textinput.replace(/[^a-zA-Z]+/gi, "").toUpperCase();
		if (content1.length > 0 && content2.length > 0 ){
			var content3 = Solitaire_Encrypt_Cipher(content2,content1,ranNumber,ranDeckNo);
			res.render('encdec', { title: 'encdec' , data:content1 , data1: content2 ,data2:content3, data3: 'Encrypted', data4:'Plain-Text' });	
		} else {
			res.render('index', { title: 'Encrypt Decrypt' });
		}

	} else if (req.body.radios === '2') {
		var content1 = req.body.textinput.replace(/[^a-zA-Z\-]+/gi, "");
		if (content1.length > 0 && content2.length > 0 ){
			var content3 = Solitaire_Decrypt_Cipher(content1, content2);
			res.render('encdec', { title: 'encdec' , data:content1 , data1: content2 ,data2:content3, data3: 'Decrypted', data4:'Encrypted' });
		} else {
			res.render('index', { title: 'Encrypt Decrypt' });
		}
	}
};

exports.index = function(req, res){
	res.render('index', { title: 'Encrypt Decrypt' });
};
